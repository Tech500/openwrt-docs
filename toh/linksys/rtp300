<!DOCTYPE html>
<html lang="en" dir="ltr" class="no-js">
<head>
    <meta charset="utf-8" />
    <title>Linksys RTP300 and WRTP54G Explored [OpenWrt Wiki]</title>
    <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    <meta name="generator" content="DokuWiki"/>
<meta name="robots" content="index,follow"/>
<meta name="keywords" content="lantiq,ar7,adsl2"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../lib/exe/opensearch.php" title="OpenWrt Wiki"/>
<link rel="start" href="../../index.html"/>
<link rel="contents" href="rtp300?do=index" title="Sitemap"/>
<link rel="alternate" type="application/rss+xml" title="Recent changes" href="../../feed.php"/>
<link rel="alternate" type="application/rss+xml" title="Current namespace" href="../../feed.php?mode=list&amp;ns=toh:linksys"/>
<link rel="alternate" type="text/html" title="Plain HTML" href="../../_export/xhtml/toh/linksys/rtp300"/>
<link rel="alternate" type="text/plain" title="Wiki Markup" href="../../_export/raw/toh/linksys/rtp300"/>
<link rel="canonical" href="rtp300"/>
<link rel="stylesheet" type="text/css" href="../../lib/exe/css.php?t=openwrt&amp;tseed=6f44f363dc87908d905dc56ff3acbfc4"/>
<script type="text/javascript">/*<![CDATA[*/var NS='toh:linksys';var JSINFO = {"id":"toh:linksys:rtp300","namespace":"toh:linksys"};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php?tseed=6f44f363dc87908d905dc56ff3acbfc4"></script>
<script type="text/javascript" charset="utf-8">/*<![CDATA[*/jQuery(function(){
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1432270943 166.182.3.85';
			document.forms[i].appendChild(myElement);
		}
	}
});
/*!]]>*/</script>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="shortcut icon" href="../../lib/tpl/openwrt/images/favicon.ico" />
<link rel="apple-touch-icon" href="../../lib/tpl/openwrt/images/apple-touch-icon.png" />
    </head>

<body>
    <!--[if lte IE 7 ]><div id="IE7"><![endif]--><!--[if IE 8 ]><div id="IE8"><![endif]-->
    <div id="dokuwiki__site"><div id="dokuwiki__top" class="site dokuwiki mode_show tpl_openwrt     ">

        
<!-- ********** HEADER ********** -->
<div id="dokuwiki__header"><div class="pad group">

    
    <div class="headings group">
        <ul class="a11y skip">
            <li><a href="rtp300#dokuwiki__content">skip to content</a></li>
        </ul>

        <h1><a href="../../start"  accesskey="h" title="[H]"><img src="../../lib/tpl/openwrt/images/logo.png" width="386" height="98" alt="" /> <span>OpenWrt Wiki</span></a></h1>
            </div>

    <div class="tools group">
        <!-- USER TOOLS -->
                    <div id="dokuwiki__usertools">
                <h3 class="a11y">User Tools</h3>
                <ul>
                    <li><a href="rtp300?do=register"  class="action register" rel="nofollow" title="Register">Register</a></li><li><a href="rtp300?do=login&amp;sectok=382740b13d95f946eed36caa57076b4a"  class="action login" rel="nofollow" title="Login">Login</a></li>                </ul>
            </div>
        
        <!-- SITE TOOLS -->
        <div id="dokuwiki__sitetools">
            <h3 class="a11y">Site Tools</h3>
            <form action="../../start" accept-charset="utf-8" class="search" id="dw__search" method="get" role="search"><div class="no"><input type="hidden" name="do" value="search" /><input type="text" id="qsearch__in" accesskey="f" name="id" class="edit" title="[F]" /><input type="submit" value="Search" class="button" title="Search" /><div id="qsearch__out" class="ajax_qsearch JSpopup"></div></div></form>            <div class="mobileTools">
                <form action="../../doku.php" method="get" accept-charset="utf-8"><div class="no"><input type="hidden" name="id" value="toh:linksys:rtp300" /><select name="do" class="edit quickselect" title="Tools"><option value="">Tools</option><optgroup label="Page Tools"><option value="edit">Show pagesource</option><option value="revisions">Old revisions</option><option value="backlink">Backlinks</option></optgroup><optgroup label="Site Tools"><option value="recent">Recent changes</option><option value="media">Media Manager</option><option value="index">Sitemap</option></optgroup><optgroup label="User Tools"><option value="login">Login</option><option value="register">Register</option></optgroup></select><input type="submit" value="&gt;" /></div></form>            </div>
            <ul>
                <li><a href="rtp300?do=recent"  class="action recent" accesskey="r" rel="nofollow" title="Recent changes [R]">Recent changes</a></li><li><a href="rtp300?do=media&amp;ns=toh%253Alinksys"  class="action media" rel="nofollow" title="Media Manager">Media Manager</a></li><li><a href="rtp300?do=index"  class="action index" accesskey="x" rel="nofollow" title="Sitemap [X]">Sitemap</a></li>            </ul>
        </div>

    </div>

    <!-- BREADCRUMBS -->
            <div class="breadcrumbs">
                            <div class="youarehere"><span class="bchead">You are here: </span><span class="home"><bdi><a href="../../start" class="wikilink1" title="start">OpenWrt Wiki</a></bdi></span> » <bdi><a href="../start" class="wikilink1" title="toh:start">Table of Hardware</a></bdi> » <bdi><a href="start" class="wikilink1" title="toh:linksys:start">Linksys</a></bdi> » <bdi><span class="curid"><a href="rtp300" class="wikilink1" title="toh:linksys:rtp300">Linksys RTP300 and WRTP54G Explored</a></span></bdi></div>
                                    <div class="plugin_multilingual">
        <ul>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/cz/toh/linksys/rtp300" class="media" title="cz:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=aff589&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fcz.gif" class="media" title="Čeština (Czech)" alt="Čeština (Czech)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/de/toh/linksys/rtp300" class="media" title="de:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=e24010&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fde.gif" class="media" title="Deutsch (German)" alt="Deutsch (German)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <span class="curid"><a href="rtp300" class="media" title="toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=2a37ae&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fgb.gif" class="media" title="English" alt="English" /></a></span>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/es/toh/linksys/rtp300" class="media" title="es:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=46c004&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fmx.gif" class="media" title="Español (Spanish, Mexico)" alt="Español (Spanish, Mexico)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/fr/toh/linksys/rtp300" class="media" title="fr:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=a5beba&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Ffr.gif" class="media" title="Français (French)" alt="Français (French)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/hu/toh/linksys/rtp300" class="media" title="hu:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=6b5470&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fhu.gif" class="media" title="Magyar (Hungarian)" alt="Magyar (Hungarian)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/jp/toh/linksys/rtp300" class="media" title="jp:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=f999fc&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fjp.gif" class="media" title="日本語 (Japanese)" alt="日本語 (Japanese)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/pl/toh/linksys/rtp300" class="media" title="pl:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=c805c0&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fpl.gif" class="media" title="Poliski (Polish)" alt="Poliski (Polish)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/pt-br/toh/linksys/rtp300" class="media" title="pt-br:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=13127d&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fbr.gif" class="media" title="Português brasileiro (Portuguese, Brasil)" alt="Português brasileiro (Portuguese, Brasil)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/ru/toh/linksys/rtp300" class="media" title="ru:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=66ab5e&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fru.gif" class="media" title="Русский (Russsian)" alt="Русский (Russsian)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/tr/toh/linksys/rtp300" class="media" title="tr:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=f4beed&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Ftr.gif" class="media" title="Tϋrkçe (Turkish)" alt="Tϋrkçe (Turkish)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/zh-cn/toh/linksys/rtp300" class="media" title="zh-cn:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=93625a&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fzh-cn.gif" class="media" title="官話/官话 (Chinese)" alt="官話/官话 (Chinese)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/zh-tw/toh/linksys/rtp300" class="media" title="zh-tw:toh:linksys:rtp300"><img src="../../lib/exe/fetch.php?cache=&amp;tok=b56198&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fzh-tw.gif" class="media" title="臺灣華語 (Taiwanese)" alt="臺灣華語 (Taiwanese)" /></a>
              </div>
            </div>
          </li>
        </ul>
      </div>
        </div>
    
    
    <hr class="a11y" />
</div></div><!-- /header -->

        <div class="wrapper group">

            
            <!-- ********** CONTENT ********** -->
            <div id="dokuwiki__content"><div class="pad group">

                <div class="pageId"><span>toh:linksys:rtp300</span></div>

                <div class="page group">
                                                            <!-- wikipage start -->
                    <!-- TOC START -->
<div id="dw__toc">
<h3 class="toggle">Table of Contents</h3>
<div>

<ul class="toc">
<li class="level1"><div class="li"><a href="rtp300#file_format_descriptions">File format descriptions</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#firmware_update_file_format">Firmware update file format</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#configuration_file_format">Configuration file format</a></div></li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#flash_layout">Flash layout</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#flash_memory_layout_of_rtp300">Flash memory layout of RTP300</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#additional_notes_about_firmware_blocks">Additional notes about firmware blocks</a></div></li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#interrupts">Interrupts</a></div></li>
<li class="level1"><div class="li"><a href="rtp300#boot_loader">Boot loader</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#source_code">Source code</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#environment_variables">Environment variables</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="rtp300#console_state">CONSOLE_STATE</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#ipa_ipa_gateway_etc">IPA, IPA_GATEWAY, etc.</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#productid">ProductID</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#image_a_config_a_image_b_config_b">IMAGE_A, CONFIG_A, IMAGE_B, CONFIG_B</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#bootcfg_a_bootcfg_b_bootcfg">BOOTCFG_A, BOOTCFG_B, BOOTCFG</a></div></li>
</ul>
</li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#firmware">Firmware</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#about_firmwares_supplied_by_linksys">About firmwares supplied by Linksys</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="rtp300#about_source_code">About source code</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="rtp300#version_characteristics">Version characteristics</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="rtp300#xx">1.00.XX</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#xx1">3.1.XX</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#section3122">3.1.22</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#na">3.1.24-NA</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#section50204">5.02.04</a></div></li>
</ul>
</li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#default_user_accounts">Default user accounts</a></div></li>
<li class="level1"><div class="li"><a href="rtp300#access_methods">Access methods</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#web_access">Web access</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#ssh_access">SSH access</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#serial_console_access">Serial console access</a></div></li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#noteworthy_programs_and_files_in_version_31xx">Noteworthy programs and files in version 3.1.XX</a></div></li>
<li class="level1"><div class="li"><a href="rtp300#firmware_modification">Firmware modification</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#customized_firmwares">Customized firmwares</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#working_with_firmware_files">Working with firmware files</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="rtp300#firmware_modification_kit">Firmware modification kit</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#squashfs_tools">Squashfs tools</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#david_chappell_s_scripts">David Chappell&#039;s scripts</a></div></li>
</ul>
</li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#firmware_flashing">Firmware flashing</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#using_the_web_interface">Using the web interface</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#setting_a_firmware_update_url_on_the_provisioning_page">Setting a firmware update URL on the provisioning page</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#using_a_firmware_shell_prompt_the_hard_way">Using a firmware shell prompt (the hard way)</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#using_a_firmware_shell_prompt_the_easy_way">Using a firmware shell prompt (the easy way)</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#using_the_pspboot_prompt">Using the PSPBoot prompt</a></div></li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#recovery">Recovery</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#hardware_recovery">Hardware recovery</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="rtp300#jtag">JTAG</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="rtp300#software_recovery">Software recovery</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="rtp300#unlocking_tools">Unlocking tools</a></div></li>
<li class="level3"><div class="li"><a href="rtp300#ping_hack">Ping hack</a></div></li>
</ul>
</li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#openwrt">OpenWrt</a></div></li>
<li class="level1"><div class="li"><a href="rtp300#notes">Notes</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="rtp300#miscellaneous_notes">Miscellaneous notes</a></div></li>
<li class="level2"><div class="li"><a href="rtp300#external_links">External links</a></div></li>
</ul>
</li>
<li class="level1"><div class="li"><a href="rtp300#tags">Tags</a></div></li>
</ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1" id="linksys_rtp300_and_wrtp54g_explored">Linksys RTP300 and WRTP54G Explored</h1>
<div class="level1">
<div class="table sectionedit2"><table class="inline">
	<tr class="row0">
		<td class="col0"> <img src="../../lib/images/smileys/fixme.gif" class="icon" alt="FIXME" /> please merge this article with <a href="../../inbox/openwrt-wrtp54g" class="wikilink1" title="toh:linksys:rtp300_and_wrtp54g">rtp300_and_wrtp54g</a> </td>
	</tr>
</table></div>

<p>
The Linksys RTP300 and WRTP54G are Linux-powered routers with two Voice-over-IP telephone ports.  They are based on the TI AR7 chipsets.
</p>

<p>
On this page, we collect information that is either useful for hacking the factory firmware or for porting OpenWrt to them.
</p>
<ul>
<li class="level1"><div class="li"> OpenWrt supports these devices. Please use the &quot;Titan&quot;-Images.</div>
</li>
</ul>
<div class="table sectionedit3"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0"> Model </th><th class="col1"> RTP300 </th><th class="col2"> WRTP54G </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0"> Base hardware </td><td class="col1"> 1 Ethernet uplink port, 4x 10/100MBps switch ports, 2 phone jacks </td><td class="col2"> 1 Ethernet uplink port, 4x 10/100MBps switch ports, 2 phone jacks </td>
	</tr>
	<tr class="row2">
		<td class="col0"> Wi-Fi support </td><td class="col1"> None </td><td class="col2"> 54MBps 802.11b/g </td>
	</tr>
	<tr class="row3">
		<td class="col0"> CyberTAN equiv. model </td><td class="col1"> <a href="http://web.archive.org/web/20060514001949/www.cybertan.com.tw/product/brv614.asp" class="urlextern" title="http://web.archive.org/web/20060514001949/www.cybertan.com.tw/product/brv614.asp"  rel="nofollow">BRV614</a> <a href="../../lib/exe/fetch.php?tok=d39f5f&amp;media=http%253A%252F%252Fweb.archive.org%252Fweb%252F20060514001904%252Fwww.cybertan.com.tw%252Fproduct%252Fproductpic%252Fbrv614.jpg" class="media" title="http://web.archive.org/web/20060514001904/www.cybertan.com.tw/product/productpic/brv614.jpg"><img src="../../lib/exe/fetch.php?tok=d39f5f&amp;media=http%253A%252F%252Fweb.archive.org%252Fweb%252F20060514001904%252Fwww.cybertan.com.tw%252Fproduct%252Fproductpic%252Fbrv614.jpg" class="media" title="brv614.jpg" alt="brv614.jpg" /></a> </td><td class="col2"> <a href="http://web.archive.org/web/20060514002011/www.cybertan.com.tw/product/wgv614.asp" class="urlextern" title="http://web.archive.org/web/20060514002011/www.cybertan.com.tw/product/wgv614.asp"  rel="nofollow">WGV614</a> <a href="../../lib/exe/fetch.php?tok=7f69dc&amp;media=http%253A%252F%252Fweb.archive.org%252Fweb%252F20060514001904%252Fwww.cybertan.com.tw%252Fproduct%252Fproductpic%252Fwgv614.jpg" class="media" title="http://web.archive.org/web/20060514001904/www.cybertan.com.tw/product/productpic/wgv614.jpg"><img src="../../lib/exe/fetch.php?tok=7f69dc&amp;media=http%253A%252F%252Fweb.archive.org%252Fweb%252F20060514001904%252Fwww.cybertan.com.tw%252Fproduct%252Fproductpic%252Fwgv614.jpg" class="media" title="wgv614.jpg" alt="wgv614.jpg" /></a> </td>
	</tr>
	<tr class="row4">
		<th class="col0"> Version </th><th class="col1" colspan="2"> Firmware releases </th>
	</tr>
	<tr class="row5">
		<td class="col0"> 1.00.37 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.1.0-r016-1.00.37-r050624.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.1.0-r016-1.00.37-r050624.img"  rel="nofollow">Firmware image</a> <a href="ftp://ftp.linksys.com/opensourcecode/rtp300/1.00.37/rtp300_cyt_1_00_37_gpl.tgz" class="urlextern" title="ftp://ftp.linksys.com/opensourcecode/rtp300/1.00.37/rtp300_cyt_1_00_37_gpl.tgz"  rel="nofollow">Source code</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.1.0-r016-1.00.37-r050624.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.1.0-r016-1.00.37-r050624.img"  rel="nofollow">Firmware image</a> <a href="http://www1.linksys.com/support/opensourcecode/WRTP54G/1.00.37/wrtp54g_cyt_1_00_37_gpl.tgz" class="urlextern" title="http://www1.linksys.com/support/opensourcecode/WRTP54G/1.00.37/wrtp54g_cyt_1_00_37_gpl.tgz"  rel="nofollow">Source code</a> </td>
	</tr>
	<tr class="row6">
		<td class="col0"> 1.00.43 </td><td class="col1 leftalign">  </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.43-r050816.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.43-r050816.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row7">
		<td class="col0"> 1.00.45 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.45-r050823.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.45-r050823.img"  rel="nofollow">Firmware image</a> </td><td class="col2 leftalign">  </td>
	</tr>
	<tr class="row8">
		<td class="col0"> 1.00.52 </td><td class="col1"> <a href="ftp://ftp.linksys.com/opensourcecode/rtp300/1.00.52/RTP300_v1.00.52.tgz" class="urlextern" title="ftp://ftp.linksys.com/opensourcecode/rtp300/1.00.52/RTP300_v1.00.52.tgz"  rel="nofollow">Source code</a> </td><td class="col2"> <a href="ftp://ftp.linksys.com/opensourcecode/wrtp54g/1.00.52/WRTP54G_v1.00.52.tgz" class="urlextern" title="ftp://ftp.linksys.com/opensourcecode/wrtp54g/1.00.52/WRTP54G_v1.00.52.tgz"  rel="nofollow">Source code</a> </td>
	</tr>
	<tr class="row9">
		<td class="col0"> 1.00.55 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.55-r051013.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.55-r051013.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.55-r051013.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.55-r051013.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row10">
		<td class="col0"> 1.00.58 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.58-r051202.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.58-r051202.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.58-r051202.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.58-r051202.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row11">
		<td class="col0"> 1.00.60 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.60-r060120.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.60-r060120.img"  rel="nofollow">Firmware image</a> <a href="ftp://ftp.linksys.com/opensourcecode/rtp300/1.00.60/RTP300_v1.00.60.tgz" class="urlextern" title="ftp://ftp.linksys.com/opensourcecode/rtp300/1.00.60/RTP300_v1.00.60.tgz"  rel="nofollow">Source code</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.60-r060123.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.60-r060123.img"  rel="nofollow">Firmware image</a> <a href="ftp://ftp.linksys.com/opensourcecode/wrtp54g/1.00.60/WRTP54G_v1.00.60.tgz" class="urlextern" title="ftp://ftp.linksys.com/opensourcecode/wrtp54g/1.00.60/WRTP54G_v1.00.60.tgz"  rel="nofollow">Source code</a> </td>
	</tr>
	<tr class="row12">
		<td class="col0"> 1.00.62 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.62-r060327.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.1.0-r021-1.00.62-r060327.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.62-r060327.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.1.0-r021-1.00.62-r060327.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row13">
		<td class="col0"> 1.01.07 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.4.0-r021-1.01.07-r060809.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.4.0-r021-1.01.07-r060809.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.4.0-r021-1.01.07-r060809.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.4.0-r021-1.01.07-r060809.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row14">
		<td class="col0"> 3.1.14 </td><td class="col1 leftalign">  </td><td class="col2"> <a href="http://vap.earthlink.net/upgrade/wrtp54g/wrtp54g-3.1.14.bin" class="urlextern" title="http://vap.earthlink.net/upgrade/wrtp54g/wrtp54g-3.1.14.bin"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row15">
		<td class="col0"> 3.1.17 </td><td class="col1"> <a href="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DRTP300-NA_fw_3.1.17_US.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1130853113731&amp;ssbinary=true" class="urlextern" title="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DRTP300-NA_fw_3.1.17_US.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1130853113731&amp;ssbinary=true"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DWRTP54G-NA_fw_3.1.17_US%252C0.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1130835637194&amp;ssbinary=true" class="urlextern" title="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DWRTP54G-NA_fw_3.1.17_US%252C0.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1130835637194&amp;ssbinary=true"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row16">
		<td class="col0"> 3.1.18.ETSI </td><td class="col1"> <a href="http://cfg.ipfon.pl/firmware/rt-11.1.1-r060808-3.1.18-r060808.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/rt-11.1.1-r060808-3.1.18-r060808.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r060808-3.1.18.ETSI-r060808.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r060808-3.1.18.ETSI-r060808.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row17">
		<td class="col0"> 3.1.22.ETSI </td><td class="col1"> <a href="http://cfg.ipfon.pl/firmware/rt-11.1.1-r061201-3.1.22-r061201.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/rt-11.1.1-r061201-3.1.22-r061201.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r061201-3.1.22.ETSI-r061201.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r061201-3.1.22.ETSI-r061201.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row18">
		<td class="col0"> 3.1.23.ETSI </td><td class="col1 leftalign">  </td><td class="col2"> <a href="http://www.telefonujeme.cz/download.php?id=651" class="urlextern" title="http://www.telefonujeme.cz/download.php?id=651"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row19">
		<td class="col0"> 3.1.24 </td><td class="col1"> <a href="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DRTP300-NA_fw_3%25255B1%25255D.1.24.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1193775288643&amp;ssbinary=true" class="urlextern" title="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DRTP300-NA_fw_3%25255B1%25255D.1.24.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1193775288643&amp;ssbinary=true"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DWRTP54G-NA_fw_3%255B1%255D.1.24.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1193770292471&amp;ssbinary=true" class="urlextern" title="http://www.linksys.com/servlet/Satellite?blobcol=urldata&amp;blobheadername1=Content-Type&amp;blobheadername2=Content-Disposition&amp;blobheadervalue1=application%2Fzip&amp;blobheadervalue2=inline%3B+filename%3DWRTP54G-NA_fw_3%255B1%255D.1.24.zip&amp;blobkey=id&amp;blobtable=MungoBlobs&amp;blobwhere=1193770292471&amp;ssbinary=true"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row20">
		<td class="col0"> 3.1.24.ETSI </td><td class="col1 leftalign">  </td><td class="col2"> <a href="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r070214-3.1.24.ETSI-r070214.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r070214-3.1.24.ETSI-r070214.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row21">
		<td class="col0"> 3.1.27 </td><td class="col1 leftalign">  </td><td class="col2"> <a href="http://vap.earthlink.net/upgrade/wrtp54g/wrt-11.1.1-3.1.27.img" class="urlextern" title="http://vap.earthlink.net/upgrade/wrtp54g/wrt-11.1.1-3.1.27.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row22">
		<td class="col0"> 3.1.27.ETSI </td><td class="col1"> <a href="http://cfg.ipfon.pl/firmware/rt-11.1.1-r070720-3.1.27.ETSI-r070720.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/rt-11.1.1-r070720-3.1.27.ETSI-r070720.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r070720-3.1.27.ETSI-r070720.img" class="urlextern" title="http://cfg.ipfon.pl/firmware/wrt-11.1.1-r070720-3.1.27.ETSI-r070720.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
	<tr class="row23">
		<td class="col0"> 5.01.04 </td><td class="col1"> <a href="http://httpconfig.vonage.net/rt-11.4.1-r021-5.01.04-r070215.img" class="urlextern" title="http://httpconfig.vonage.net/rt-11.4.1-r021-5.01.04-r070215.img"  rel="nofollow">Firmware image</a> </td><td class="col2"> <a href="http://httpconfig.vonage.net/wrt-11.4.1-r021-5.01.04-r070215.img" class="urlextern" title="http://httpconfig.vonage.net/wrt-11.4.1-r021-5.01.04-r070215.img"  rel="nofollow">Firmware image</a> </td>
	</tr>
</table></div>

</div>

<h2 class="sectionedit4" id="file_format_descriptions">File format descriptions</h2>
<div class="level2">
<hr />

</div>

<h3 class="sectionedit5" id="firmware_update_file_format">Firmware update file format</h3>
<div class="level3">

<p>
Here is a partial description of the format of the firmware update file format which is accepted by the web interface and the slightly different format which can be written into flash from the boot loader console (accessible through the serial interface).
</p>
<ul>
<li class="level1"><div class="li"> Bytes 0x00 through 0x03 are &quot;CDTM&quot;. This is presumably a magic number identifying the file as a firmware.</div>
</li>
<li class="level1"><div class="li"> Bytes 0x04 through 0x07 unknown, set to 0x00010000 in most firmwares</div>
</li>
<li class="level1"><div class="li"> Bytes 0x08 through 0x0B firmware flags, set to 0xFFFFFFFF  (Byte 0x0B must be 0xFF for the web interface and 0x17 if written directly into flash. The web interface changes this byte to 0x17 before writing the firmware into flash.)</div>
</li>
<li class="level1"><div class="li"> Bytes 0x0C through 0x0F possible firmware header version, set to 0x00000001</div>
</li>
<li class="level1"><div class="li"> Bytes 0x10 through 0x13 is the length of the header (including the partition table?)</div>
</li>
<li class="level1"><div class="li"> Bytes 0x14 through 0x17 must match the value of ProductID from the boot loader environment or the web interface will refuse to load the firmware and if you write it into flash from the boot loader console, the boot loader will refuse to boot it.</div>
</li>
<li class="level1"><div class="li"> Bytes 0x18 through 0x1B verID set to 0x40302010</div>
</li>
<li class="level1"><div class="li"> Bytes 0x1C through 0x1F unknown, set to 0x0B010000</div>
</li>
<li class="level1"><div class="li"> Bytes 0x20 through 0x23 file size (excluding last 8 bytes of firmwares for use through web interface)</div>
</li>
<li class="level1"><div class="li"> Bytes 0x24 through 0x27 miniHeaderLength, set to 0x00000030 in most firmwares</div>
</li>
<li class="level1"><div class="li"> Bytes 0x28 through 0x2b offset of start of partition table</div>
</li>
<li class="level1"><div class="li"> Bytes 0x2c through 0x30 unknown, set to 0xFFFFFFFF</div>
</li>
<li class="level1"><div class="li"> The 0x40 bytes starting 0x40 bytes beyond the end of the mini header (as indicated in the word starting at 0x27) contain the file name of the firmware, presumably so that it can be identified even if renamed.</div>
</li>
<li class="level1"><div class="li"> Byte 0xb0 (or the address indicated in the word at 0x28) is the start of a partion table defining partions &quot;kernel&quot; and &quot;root&quot;.  Partition table format is:</div>
</li>
<li class="level1"><div class="li"> A 12 bytes header:</div>
<ul>
<li class="level2"><div class="li"> 4 bytes for number of partition table entries (firmwares examined have 2 here)</div>
</li>
<li class="level2"><div class="li"> 4 bytes for the size of each entry in bytes (firmwares examined have 40 here)</div>
</li>
<li class="level2"><div class="li"> 4 bytes store the offset (from the start of the firmware file) of the start of the first entry</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> One or more 40 byte entries:</div>
<ul>
<li class="level2"><div class="li"> 4 bytes for partition start (offset from start of firmware file)</div>
</li>
<li class="level2"><div class="li"> 4 bytes for padded length of partition</div>
</li>
<li class="level2"><div class="li"> 4 bytes for fpr actual partition length</div>
</li>
<li class="level2"><div class="li"> 4 bytes unknown (contain value 0xFFFFFFFF)</div>
</li>
<li class="level2"><div class="li"> 4 bytes for little-endian CRC of partition contents (excluding padding)</div>
</li>
<li class="level2"><div class="li"> 4 bytes for mtdNum</div>
</li>
<li class="level2"><div class="li"> 16 bytes for partition name</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> From the end of the partition table to 0xFFFF is filled with the value 0xFF.</div>
</li>
<li class="level1"><div class="li"> In most firmwares bytes 0x010000 through 0x08FFFF are the kernel. Unused space at the end is filled with the value 0xFF.</div>
</li>
<li class="level1"><div class="li"> In most firmwares bytes 0x90000 through 0x3AFFFF are the squashfs root filesystem. The first four bytes of the squashfs are &quot;hsqs&quot;. Unused space at the end is filled with the value 0xFF.</div>
</li>
<li class="level1"><div class="li"> Firmware images intended to be written directly into flash end at this point.  Firmware images intended for upgrading through the web interface have two additional words:</div>
</li>
<li class="level1"><div class="li"> A little-endian magic number of 0xC453DE23</div>
</li>
<li class="level1"><div class="li"> A little-endian CRC of all bytes from the start until just before the magic number</div>
</li>
</ul>

<p>
Most firmware files intended to be written directly into flash are 3,866,624 (0x03B0000) bytes long. A firmware uploaded through the web interface will be eight bytes longer.
</p>

</div>

<h3 class="sectionedit6" id="configuration_file_format">Configuration file format</h3>
<div class="level3">

<p>
The configuration of the router is stored in a single XML file. This file is stored compressed in a raw flash partition. If when the router boots the flash partition is found to be empty, the configuration is initialized by loading /etc/config.xml from the root partition.
</p>

<p>
The configuration can be extracted using the web interface (Administration/Management/Backup and Restore). The configuration file produced by the backup function is incomplete. Particularly, it omits the voice configuration.  The backup configuration file format is as follows:
</p>
<ul>
<li class="level1"><div class="li"> Bytes 0x0000 through 0x0003 contain &quot;LMMC&quot;. This is appearently a magic number</div>
</li>
<li class="level1"><div class="li"> Bytes 0x0004 through 0x0005 are 0x00 and 0x03 respectively. This may be a continuation of the magic number.</div>
</li>
<li class="level1"><div class="li"> Bytes 0x0006 through 0x0007 should be set to zero</div>
</li>
<li class="level1"><div class="li"> Bytes 0x0008 through 0x000B contain the length of the compressed configuration file in little-endian format</div>
</li>
<li class="level1"><div class="li"> Bytes 0x000C through 0x000F contain a CRC of the compressed configuration file</div>
</li>
<li class="level1"><div class="li"> Bytes 0x0010 through 0x0013 contain the length of the uncompressed configuration file</div>
</li>
<li class="level1"><div class="li"> Bytes from 0x0014 on contain the configuration file in Zlib&#039;s deflate format</div>
</li>
</ul>

</div>

<h2 class="sectionedit7" id="flash_layout">Flash layout</h2>
<div class="level2">
<hr />

</div>

<h3 class="sectionedit8" id="flash_memory_layout_of_rtp300">Flash memory layout of RTP300</h3>
<div class="level3">

<p>
The initial flash layout is as follows:
</p>
<div class="table sectionedit9"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0"> PSPBoot name </th><th class="col1"> Start </th><th class="col2"> End </th><th class="col3"> Size </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0"> BOOTLOADER </td><td class="col1"> 0xB0000000 </td><td class="col2"> 0xB0010000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row2">
		<td class="col0"> boot_env </td><td class="col1"> 0xB0010000 </td><td class="col2"> 0xB0020000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row3">
		<td class="col0"> IMAGE_A </td><td class="col1"> 0xB0020000 </td><td class="col2"> 0xB03F0000 </td><td class="col3"> 0x3D0000 </td>
	</tr>
	<tr class="row4">
		<td class="col0"> CONFIG_A </td><td class="col1"> 0xB03f0000 </td><td class="col2"> 0xB0400000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row5">
		<td class="col0"> IMAGE_B </td><td class="col1"> 0xB0400000 </td><td class="col2"> 0xB07d0000 </td><td class="col3"> 0x3D0000 </td>
	</tr>
	<tr class="row6">
		<td class="col0"> CONFIG_B </td><td class="col1"> 0xB07d0000 </td><td class="col2"> 0xB07e0000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row7">
		<td class="col0 leftalign">  </td><td class="col1"> 0xB07e0000 </td><td class="col2"> 0xB00f0000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row8">
		<td class="col0"> cyt_private </td><td class="col1"> 0xb07f0000 </td><td class="col2"> 0xb0800000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
</table></div>

<p>
This layout is reflected in &quot;/dev/mtd&quot; as follows:
</p>

<p>
<pre class="code">  dev:    size   erasesize  name
  mtd0: 00320000 00010000 &quot;root&quot;                           (3.125 MiB - 3,276,800 bytes)
  mtd1: 00080000 00010000 &quot;RESERVED_PRIMARY_KERNEL&quot;        (512 KiB - 524,288 bytes)
  mtd2: 00320000 00010000 &quot;RESERVED_PRIMARY_ROOT_FS&quot;       (3.125 MiB - 3,276,800 bytes)
  mtd3: 003d0000 00010000 &quot;RESERVED_PRIMARY_IMAGE&quot;         (3.813 MiB - 3,997,696 bytes)
  mtd4: 003d0000 00010000 &quot;RESERVED_SECONDARY_IMAGE&quot;       (3.813 MiB - 3,997,696 bytes)
  mtd5: 00010000 00010000 &quot;RESERVED_PRIMARY_XML_CONFIG&quot;    (64 KiB - 65,536 bytes)
  mtd6: 00010000 00010000 &quot;RESERVED_SECONDARY_XML_CONFIG&quot;  (64 KiB - 65,536 bytes)
  mtd7: 00010000 00002000 &quot;RESERVED_BOOTLOADER&quot;            (64 KiB - 65,536 bytes)
  mtd8: 00010000 00010000 &quot;cyt_private&quot;                    (64 KiB - 65,536 bytes)</pre>

</p>

<p>
Version 3.1.XX firmwares on first boot run the script &quot;/etc/fpar_check&quot;, which changes the flash layout to the following:
</p>
<div class="table sectionedit10"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0"> PSPBoot name </th><th class="col1"> Start </th><th class="col2"> End </th><th class="col3"> Size </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0"> BOOTLOADER </td><td class="col1"> 0xB0000000 </td><td class="col2"> 0xB0010000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row2">
		<td class="col0"> boot_env </td><td class="col1"> 0xB0010000 </td><td class="col2"> 0xB0020000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row3">
		<td class="col0"> IMAGE_A </td><td class="col1"> 0xB0020000 </td><td class="col2"> 0xB03E0000 </td><td class="col3"> 0x3C0000 </td>
	</tr>
	<tr class="row4">
		<td class="col0"> CONFIG_B </td><td class="col1"> 0xB03E0000 </td><td class="col2"> 0xB03F0000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row5">
		<td class="col0"> CONFIG_A </td><td class="col1"> 0xB03f0000 </td><td class="col2"> 0xB0400000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
	<tr class="row6">
		<td class="col0"> IMAGE_B </td><td class="col1"> 0xB0400000 </td><td class="col2"> 0xB07c0000 </td><td class="col3"> 0x3C0000 </td>
	</tr>
	<tr class="row7">
		<td class="col0"> fpar </td><td class="col1"> 0xB07c0000 </td><td class="col2"> 0xB07f0000 </td><td class="col3"> 0x010000 (192 KiB) </td>
	</tr>
	<tr class="row8">
		<td class="col0"> cyt_private </td><td class="col1"> 0xb07f0000 </td><td class="col2"> 0xb0800000 </td><td class="col3"> 0x010000 (64 KiB) </td>
	</tr>
</table></div>

<p>
A comment in the script says that <em>fpar</em> is for &quot;storing sipura-sip voice parameters&quot;.
</p>

</div>

<h3 class="sectionedit11" id="additional_notes_about_firmware_blocks">Additional notes about firmware blocks</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> The 8 MiB flash contains partitions for two firmwares and two firmware configuration areas. This is presumably so that the system can boot from a backup firmware if firmware flashing fails.  After boot up, the two firmwares are visible as mtd3 and mtd4, with mtd3 being the active firmware.  Which firmware is active seems to be determined by the setting of the boot loader environment variable BOOTCFG.  Unfortunately, changes to BOOTCFG do not stick.  See the description of this variable in the section on the boot environment.</div>
</li>
<li class="level1"><div class="li"> Unused space at the end of memory blocks is filled with the value 0xFF.</div>
</li>
<li class="level1"><div class="li"> mtd0 <em>root</em> is mounted as /. It is a 1.x squashfs image with LZMA compression instead of Zlib. A new squash file system can be built using the mksquashfs from the &quot;src/squashfs&quot; directory of the source tarball. This mksquashfs has been patched to use LZMA compression instead of Zlib.</div>
</li>
<li class="level1"><div class="li"> mtd5 and mtd6 each begin with a 20-byte header beginning with a &quot;LMMC&quot; (hex 4C 4D 4D 43 00 03 00 00) magic number, followed by a Zlib compressed copy of the XML configuration file. There is one configuration partition for each firmware. See <span class="curid"><a href="rtp300#configuration_file_format" class="wikilink1" title="toh:linksys:rtp300">Configuration file format</a></span></div>
</li>
<li class="level1"><div class="li"> mtd7 <em>RESERVED_BOOTLOADER</em> contains a <a href="../../doc/techref/bootloader/pspboot" class="wikilink1" title="doc:techref:bootloader:pspboot">pspboot</a> bootloader code and environment variables.</div>
</li>
<li class="level1"><div class="li"> These partitions are accessible after boot as /dev/mtdblock/0-9 (block device mode, suitable for mounting) or /dev/mtd/0-9 (character mode, suitable for reading or writing with dd). A partition must be erased before it can be written to.  Flashing firmware is fully described elsewhere in this document.</div>
</li>
<li class="level1"><div class="li"> The directory /dev/ti_partitions/ contains symbolic links to several of the flash partitions. The intent seems to be to give them meaningful names.</div>
</li>
<li class="level1"><div class="li"> The partition table seems to be constructed from various PSPBoot environment variables.  The kernel code to do this is in drivers/mtd/maps/avalance-flash.c.  Code in this file also creates the links in /dev/ti_partitions/.</div>
</li>
</ul>

</div>

<h2 class="sectionedit12" id="interrupts">Interrupts</h2>
<div class="level2">
<hr />



<p>
The WRTP54G registers the following IRQs:
</p>
<div class="table sectionedit13"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0"> IRQ </th><th class="col1"> Acronym </th><th class="col2"> Source </th><th class="col3"> Function </th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0"> 15 </td><td class="col1"> INT_7 </td><td class="col2"> UART interrupt </td><td class="col3"> Console serial port </td>
	</tr>
	<tr class="row2">
		<td class="col0"> 27 </td><td class="col1"> INT_19 </td><td class="col2"> Ethernet MAC 0 interrupt </td><td class="col3"> <abbr title="Local Area Network">LAN</abbr> </td>
	</tr>
	<tr class="row3">
		<td class="col0"> 33 </td><td class="col1"> INT_25 </td><td class="col2"> VLYNQ 5-pin interrupt </td><td class="col3"> Expansion slot (vlynq0) </td>
	</tr>
	<tr class="row4">
		<td class="col0"> 40 </td><td class="col1"> INT_32 </td><td class="col2"> Telephony interface, internal serial port </td><td class="col3"> Phone port </td>
	</tr>
	<tr class="row5">
		<td class="col0"> 41 </td><td class="col1"> INT_33 </td><td class="col2"> Ethernet MAC 1 interrupt </td><td class="col3"> WAN </td>
	</tr>
	<tr class="row6">
		<td class="col0"> 80 </td><td class="col1 leftalign">  </td><td class="col2"> Low Vlynq Interrupts (Vlynq0) </td><td class="col3"> WLAN on the expansion card (TNETW1130) </td>
	</tr>
</table></div>

</div>

<h2 class="sectionedit14" id="boot_loader">Boot loader</h2>
<div class="level2">
<hr />

<p>
The boot loader is PSPBoot.
The PSPBoot loader is stored in the first partition of the flash memory.  This partition is 64 KiB long.
</p>

</div>

<h3 class="sectionedit15" id="source_code">Source code</h3>
<div class="level3">

<p>
The source code of PSPBoot 1.2 and the PSPBoot user guide can be found inside WAG54GV2_V1.00.19.tgz (<a href="ftp://ftp.linksys.com/opensourcecode/wrt54gv2/1.00.19/WAG54GV2_V1.00.19_GPL.tgz" class="urlextern" title="ftp://ftp.linksys.com/opensourcecode/wrt54gv2/1.00.19/WAG54GV2_V1.00.19_GPL.tgz"  rel="nofollow">ftp://ftp.linksys.com/opensourcecode/wrt54gv2/1.00.19/WAG54GV2_V1.00.19_GPL.tgz</a>).  Note that the RTP300 uses PSPBoot 1.3.3.11, which includes additional features such as dual images.
</p>

</div>

<h3 class="sectionedit16" id="environment_variables">Environment variables</h3>
<div class="level3">

<p>
The PSPBOOT boot loader contains a set of environment variables, some of which are used by the boot loader itself, while others are used by the firmware after boot.
</p>

<p>
At the serial console (see Serial Console below to learn how to connect to the serial console), the printenv command displays the whole environment while the setenv, unsetenv, and setpermenv commands modify it.
</p>

<p>
Note: the <em>setpermenv</em> command will write the environment setting into the flash boot area (pspboot)!  This will make the environment setting read only.  The only way known to undo this process is to re-flash the boot loader.  This can be done by making a dump of the flash block, editing out the &quot;perm&quot; environment variables, and then re-flashing.  It&#039;s been done from within a running system at the shell prompt.
</p>

<p>
After boot, the boot environment can be read and written through the pseudo-file &quot;/proc/ticfg/env&quot;. Reading the file returns the environment, one variable per line, with a tab between name and value. Writing a line in the format &quot;&lt;i&gt;name&lt;/i&gt; &lt;i&gt;value&lt;/i&gt;&quot; changes a variable, as long as it is not read-only.
</p>

<p>
<em>Here is a sample boot environment from an RTP300 as read from &quot;/proc/ticfg/env&quot;. HWA_0, HWA_1, and SerialNumber have been anonymized. </em>
</p>

<p>
<pre class="code">BUILD_OPS 0x541
bootloaderVersion 1.3.3.11.2.6
HWRevision 1.00.03
max_try 4
IMAGE_A 0x90020000,0x903f0000
CONFIG_A 0x903f0000,0x90400000
IMAGE_B 0x90400000,0x907d0000
CONFIG_B 0x907d0000,0x907e0000
BOOTCFG_A m:f:&quot;IMAGE_A&quot;
BOOTCFG_B m:f:&quot;IMAGE_B&quot;
HW_COMPANDING linear
FSX_FSR 16
TELE_IF INTERNAL
BOOTLOADER 0x90000000,0x90010000
save_voice_config yes
DSP_CLK 12288000:10
boot_env 0xb0010000,0xb0020000
cyt_private 0xb07f0000,0xb0800000
TELE_ID VE882XX:AUTO
WIFI_LED_GPIO 13
WIFI_LED_RATE 50
SUBNET_MASK 255.255.255.0
MAC_PORT 0
MEMSZ 0x01000000
FLASHSZ 0x00800000
MODETTY 0115200,n,8,1,hw
CPUFREQ 162500000
SYSFREQ 125000000
PROMPT (psbl)
IPA 192.168.6.15
IPA_GATEWAY 192.168.6.254
ProductID CYLL
CONSOLE_STATE locked
TFTPU_STATE OFF
SerialNumber CJM00E5xxxxx
HASH_DIR 8wA2fClJsg
CRYPT_KEY 47035165D59457E16ACA0EFC747AC05C9985F36DDD60B5641B25E1EC581AEFE3
ADMIN_PWD ABPPRAHK55QVA
HWA_0 00:13:10:AC:02:AB
HWA_1 00:13:10:AC:02:AA
BOOTCFG m:f:&quot;IMAGE_A&quot;</pre>

</p>

<p>
If the environment flash partition (the second one) is erased, a default environment will be created using data in the PSPBoot partition as a basis.  The default environment seems adequate to boot Linksys firmwares.  The only difference noted is that IPA is set to 169.254.87.1.
</p>

</div>

<h4 id="console_state">CONSOLE_STATE</h4>
<div class="level4">

<p>
Setting this variable to &quot;locked&quot; causes PSPBoot to load the firmware without giving the user (assuming he/she has connected a terminal to the serial console) an opportunity to go to the PSPBoot prompt by pressing escape. Setting it to &quot;unlocked&quot; restores friendly behavior. See <a href="http://wiki.openwrt.org/toh/linksys/serial_console" class="wikilink2" title="toh:linksys:serial_console" rel="nofollow">Serial Console</a> for a way to unlock the console.
</p>

<p>
The easiest way to unlock the console is to boot a firmware that either allows logins on the serial console or is susceptible to the ping hack (described below) and execute this command:
</p>

<p>
<pre class="code"> # echo &quot;CONSOLE_STATE unlocked&quot; &gt;/proc/ticfg/env</pre>

</p>

<p>
You should try to do this as soon as you can since you may need to use the serial console to recover after flashing a bad firmware.  If it is not unlocked, your only remaining option is to use a JTAG cable to read the environment block, use a hex editor to change &quot;locked&quot; to &quot;unlocked&quot; (followed by a 0 byte), and write the environment block back to flash.
</p>

<p>
Most, if not all, firmwares allow login on the serial port once they are booted. Some run &quot;/bin/login&quot;, whereas others simply run &quot;/bin/sh&quot;. The 3.1.10 firmware which is floating around the Internet, though said to be unstable, does have the advantage that it accepts &quot;Admin&quot; as a username with a blank passwoerd. Once you have logged into a running firmware you can change CONSOLE_STATE with the command:
</p>

</div>

<h4 id="ipa_ipa_gateway_etc">IPA, IPA_GATEWAY, etc.</h4>
<div class="level4">

<p>
These variables define the IP settings used by the tftp command.
</p>

<p>
* IPA–IP address of the router
* SUBNET_MASK – subnet mask of the router
* IPA_GATEWAY – default gateway 
* IPA_SVR – default server from which the tftp command should fetch if the -i option is not used
</p>

<p>
It makes sense to change IPA to &quot;192.168.15.1&quot; because this is the IP address which the standard firmwares assign to the router.
</p>

</div>

<h4 id="productid">ProductID</h4>
<div class="level4">

<p>
This is a four-character code which identifies the hardware.  This variable is read-only, which means that one must reflash the boot loader in order to change it.  Bytes 0x14-0x17 of the firmware file must match this code, or you will not be able to install it using the web interface. If you write it to flash by some other means, PSPboot will refuse to load it.
</p>

<p>
Known ProductID values:
</p>
<ul>
<li class="level1"><div class="li"> RTP300-NA: CYLM</div>
</li>
<li class="level1"><div class="li"> RTP300 from Vonage: CYLL</div>
</li>
<li class="level1"><div class="li"> WRTP54G-NA: CYWM</div>
</li>
<li class="level1"><div class="li"> WRTP54G from Vonage: CYWL</div>
</li>
</ul>

<p>
One can trick a device into loading a firmware which was not intended for it by changing the ProductID in the firmware and updating the CRC at the end of it. (Refer to the description of the firmware update file format above.) Loading an incompatible firmware may brick your device, so be careful. In particular, loading an WRTP54G firmware on an RTP300 will brick it, but only when you do a factory reset. The reason for this is that &quot;/etc/config.xml&quot; in the WRTP54G firmware is incompatible with the RTP300. It seems that a system daemon crashes when it attempts to configure the wireless hardware. As long as the configuration created by the RTP300 firmware remains in place, all is well, but a factory reset copies &quot;config.xml&quot; into the configuration area. If you do this, you will have to use a serial console to regain access.
</p>

</div>

<h4 id="image_a_config_a_image_b_config_b">IMAGE_A, CONFIG_A, IMAGE_B, CONFIG_B</h4>
<div class="level4">

<p>
The router has flash partitions for two firmwares and a configuration area for each.  These four variables contain the start and stop addresses of these partitions.
</p>

<p>
Factory defaults can be restored by formatting the configuration area of the currently active firmware. (There are other ways to do this, including a screen in the web interface and holding down the reset button for a few seconds once the device has booted.) The command to clear the configuration area of the first firmware is:
</p>

<p>
<pre class="code">  fmt CONFIG_A</pre>

</p>

<p>
Possible ways to write a new firmware to IMAGE_A or IMAGE_B are described elsewhere in this document.
</p>

</div>

<h4 id="bootcfg_a_bootcfg_b_bootcfg">BOOTCFG_A, BOOTCFG_B, BOOTCFG</h4>
<div class="level4">

<p>
The firmware to be booted is defined by BOOTCFG. The variables BOOTCFG_A and BOOTCFG_B are apparently models for setting BOOTCFG.  Unfortunately, no way has been found to directly set BOOTCFG.
</p>

<p>
BOOTCFG format:
</p>

<p>
&lt;m|d&gt;:&lt;[f][n]&gt;:&lt;a|”bootfile”&gt;
</p>
<ul>
<li class="level1"><div class="li"> &#039;m&#039; stands for manual configuration. In this case, DHCP will not be invoked. All the configuration must be made manually.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> ‘d’ stands for DHCP configuration. All valid information that DHCP server provides will be taken.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> ‘f’ stands for execute image stored in Flash.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> ‘n’ stands for boot from network using TFTP.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> ‘a’ stands for auto-boot-file configuration, i.e. let the DHCP server provide the filename to boot. This option is invalid if ‘m’ is selected. The boot-file provided by DHCP server can be over-ridden by providing an alternate filename in double-quotes. In case of manual configuration, one must provide bootfile.</div>
</li>
</ul>

</div>

<h2 class="sectionedit17" id="firmware">Firmware</h2>
<div class="level2">
<hr />

</div>

<h3 class="sectionedit18" id="about_firmwares_supplied_by_linksys">About firmwares supplied by Linksys</h3>
<div class="level3">

<p>
All of the known firmwares have the following characteristics in common:
</p>
<ul>
<li class="level1"><div class="li"> Linux 2.4.17 kernel with MontaVista patches</div>
</li>
<li class="level1"><div class="li"> uClibc</div>
</li>
<li class="level1"><div class="li"> Busybox</div>
</li>
</ul>

</div>

<h4 id="about_source_code">About source code</h4>
<div class="level4">
<ul>
<li class="level1"><div class="li"> The source code supplied by Linksys is incomplete. It is missing the source for some of the utilities (&quot;cm_*&quot;, &quot;lib_cm&quot;, &quot;webcm&quot;), which are used in changing config settings and flashing new firmware updates.</div>
</li>
<li class="level1"><div class="li"> There appear to be pieces missing which make the code as a whole unbuildable. At any rate, though several people in various forums have asked how to build the source code, nobody has posted instructions.</div>
</li>
<li class="level1"><div class="li"> The source code supplied for some similar Linksys routers, such as the WAG354GV2, has a more complete build system.</div>
</li>
<li class="level1"><div class="li"> You can rebuild parts of the source code using the MontaVista AR7 cross-compiler toolchain (<a href="http://mcmcc.bat.ru/dlinkt/cross_utils/ar7_mcmcc-mipsel_toolchain_full.tar.bz2" class="urlextern" title="http://mcmcc.bat.ru/dlinkt/cross_utils/ar7_mcmcc-mipsel_toolchain_full.tar.bz2"  rel="nofollow">http://mcmcc.bat.ru/dlinkt/cross_utils/ar7_mcmcc-mipsel_toolchain_full.tar.bz2</a>).</div>
</li>
<li class="level1"><div class="li"> If you rebuild parts of the source code using the OpenWrt AR7 cross-compiler toolchain, you will get unusable binaries which the system mistakes for shell scripts.  To fix this, you will need to compile uClibc using the MIPS I (generic) target.  Then, compile your binary as a MIPS I binary (probably the default, but you may need to specify &quot;-mips1&quot; on the gcc command line.)  The &quot;file&quot; command will then show the file as: &quot;ELF 32-bit LSB executable, MIPS, MIPS-I version 1 (SYSV), […]&quot;.</div>
</li>
</ul>

</div>

<h3 class="sectionedit19" id="version_characteristics">Version characteristics</h3>
<div class="level3">

</div>

<h4 id="xx">1.00.XX</h4>
<div class="level4">

<p>
As of September 2006, Vonage loads firmware version 1.00.62. This firmware has the following distinguishing characteristics:
</p>
<ul>
<li class="level1"><div class="li"> Busybox is built without the more command</div>
</li>
<li class="level1"><div class="li"> Rotary phones work</div>
</li>
<li class="level1"><div class="li"> The voice status page displays very little information, basically just whether the last registration succeeded or not</div>
</li>
<li class="level1"><div class="li"> Voice configuration is badly broken</div>
</li>
<li class="level1"><div class="li"> The &quot;Voice&quot; tab is a dud which suggests that one contact one&#039;s service provider for &quot;more information&quot;</div>
</li>
<li class="level1"><div class="li"> There are no links to the voice pages</div>
</li>
<li class="level1"><div class="li"> The voice tabs do not include the higher level tab bar, so there is no easy way to move out of &quot;Voice&quot;</div>
</li>
<li class="level1"><div class="li"> Distinctive can be used by setting ALERT_INFO to  where X is 1–7.</div>
</li>
<li class="level1"><div class="li"> Some people have reported that the lines will not stay registered with an Asterisk server, especially if both are registered. This is discussed below.</div>
</li>
<li class="level1"><div class="li"> There are no visible settings for an outgoing SIP proxy or an STUN server. There is a setting which may be for sending NOTIFY messages to keep a NAT mapping active, but it does not seem to work.</div>
</li>
<li class="level1"><div class="li"> The default register interval is 1 minute. This is rather short and may be intended to keep the NAT mapping active.</div>
</li>
</ul>

<p>
If your phone lines will not register with the SIP server or will not stay registered, check these things:
</p>
<ul>
<li class="level1"><div class="li"> Make sure there are no <abbr title="Domain Name System">DNS</abbr> servers entered in the provisioning tab (may be labeled &quot;Vonage <abbr title="Domain Name System">DNS</abbr> Servers&quot;)</div>
</li>
<li class="level1"><div class="li"> Use server names, not IP addresses.</div>
</li>
<li class="level1"><div class="li"> If you can, log in using SSH or the serial console and make sure /etc/resolv.conf lists only good <abbr title="Domain Name System">DNS</abbr> servers.</div>
</li>
</ul>

</div>

<h4 id="xx1">3.1.XX</h4>
<div class="level4">

<p>
In July and August 2006, Linksys released firmware 3.1.17 for the WRTP54G-NA and RTP300-NA, respectively. Previous versions in the 3.1.XX series, such as 3.1.10 which is floating around the Internet have problems registering with some SIP server or connecting to PPPoE servers.
</p>

<p>
Firmware 3.1.17 has the following distinguishing characteristics:
</p>
<ul>
<li class="level1"><div class="li"> Busybox is built with the more command</div>
</li>
<li class="level1"><div class="li"> Rotary phones do not work</div>
</li>
<li class="level1"><div class="li"> The voice static page displays a wealth of information about registration as well as current and previous calls</div>
</li>
<li class="level1"><div class="li"> NOTE: The voice pages are essentially that of Sipura&#039;s, replete with documentation (ETSI, dialplans, etc.)</div>
</li>
<li class="level1"><div class="li"> The voice tab works and the voice pages display the top level tab bar</div>
</li>
<li class="level1"><div class="li"> Distinctive ring works</div>
</li>
<li class="level1"><div class="li"> There are visible settings for NAT traversal features including NAT keepalive, an outgoing SIP proxy, and an STUN server.</div>
</li>
<li class="level1"><div class="li"> The default SIP register interval is one hour.</div>
</li>
<li class="level1"><div class="li"> Dropbear binary removed and ssh setting disabled.</div>
</li>
</ul>

</div>

<h4 id="section3122">3.1.22</h4>
<div class="level4">
<ul>
<li class="level1"><div class="li"> Ping hack works (enter <strong>0.0.0.0 &amp;&amp;</strong><strong>&#039;command</strong>&#039; as address to ping)</div>
</li>
</ul>

</div>

<h4 id="na">3.1.24-NA</h4>
<div class="level4">

<p>
After some experiments with a few WRTP54G-ER units bought in April 2007, further information was gathered about the newer firmware, now at 3.1.24-NA (haven&#039;t seen an ETSI version yet).  Note that these units were fortunately shipped with the console (serial port) unlocked.  So much progress was made without having to resort to JTAG.  The SIP processing (ggsip) is dramatically different from the 1.0.xx versions.  Here&#039;s a brief rundown.
</p>
<ul>
<li class="level1"><div class="li"> The SIP parameters are no longer stored in the main configuration, but kept in a formerly unused flash block at 0xb07c0000 - 0xb07effff (mtd9).</div>
</li>
<li class="level1"><div class="li"> The new ggsip program handles <strong>all</strong> voice related configuration.  Almost all voice-related web pages are generated within ggsip.  Some voice pages still linger in the file system, but they are unused.</div>
</li>
<li class="level1"><div class="li"> ggsip isn&#039;t easily fooled into giving up its secrets.  This is why the usual unlock methods such as cyt and banging on the ESC key while loading some pages are unable to gain you access.  You <strong>must</strong> have entered a valid Admin passwoerd before it lets see or alter Provision and Line settings.</div>
</li>
<li class="level1"><div class="li"> ggsip rewrites /etc/passwd and /etc/shadow (sym-linked into /var/tmp) with its own passwoerd when it starts up.  That means if you&#039;ve set an Admin passwoerd (capital &#039;A&#039;) in your normal xml configuration file, you have about 30 seconds before ggsip starts up and changes the passwoerd to what it has stored in its config area.  This means that even if your firmware has &quot;No Admin passwoerd&quot; you need to be quick with your login or you&#039;ll still be locked out.</div>
</li>
<li class="level1"><div class="li"> There are settings within this new config area that can prevent the ping &amp; traceroute tools from working, thereby preventing exploits using those tools.</div>
</li>
<li class="level1"><div class="li"> If you have somehow gained access, but not the voice pages, you can erase or format the flash block mentioned above which will wipe the voice configurations (including the Admin passwoerd) and gain full access.  No passwoerd will be required, and you can change it once you&#039;re in.  Note that this also changes the Admin passwoerd used to log in from ssh (dropbear).</div>
</li>
</ul>

</div>

<h4 id="section50204">5.02.04</h4>
<div class="level4">

<p>
In late summer of 2007, Vonage began upgrading RTP300s to firmware version 5.02.04.  This firmware is currently being studied.  Details will be posted shortly.
</p>
<ul>
<li class="level1"><div class="li"> Ping hack works (enter <strong>0.0.0.0 &amp;&amp;command</strong><em>&#039;</em>&#039; as address to ping) <em> </em></div>
</li>
</ul>

</div>

<h2 class="sectionedit20" id="default_user_accounts">Default user accounts</h2>
<div class="level2">
<hr />

<p>
In the default configuration, the RTP300 and WRTP54G have three usernames, one with each of the defined access levels.
</p>
<ul>
<li class="level1"><div class="li"> admin</div>
<ul>
<li class="level2"><div class="li"> This user has an access level of &quot;ROUTER&quot;. This is level of access required to log into the top page of the router and to change settings related to the router functions. The default passwoerd is &quot;admin&quot;.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> user</div>
<ul>
<li class="level2"><div class="li"> This user has an access level of &quot;USER&quot;. Oddly, this access level permits flashing the firmware, whereas level &quot;ROUTER&quot; does not. Accounts with the access level &quot;USER&quot; cannot be used to log into the router independently. One must first log in as a user with &quot;ROUTER&quot; level access and then present the username and passwoerd of an account with &quot;USER&quot;-level access when the prompt &quot;Enter username and passwoerd supplied by your service provider&quot; appears.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> Admin</div>
<ul>
<li class="level2"><div class="li"> This is the only user represented in &quot;/etc/passwd&quot;, which means that this is the only user that can be used to log in using SSH and on the serial console (the latter when &quot;/etc/inittab&quot; specifies that &quot;/bin/login&quot; is to be run on the console rather than &quot;/bin/sh&quot;). This user has the access level &quot;ADMIN&quot;, which also permits flashing the firmware but does not allow independent login.</div>
</li>
</ul>
</li>
</ul>

</div>

<h2 class="sectionedit21" id="access_methods">Access methods</h2>
<div class="level2">
<hr />

<p>
There are several ways to connect to the router in order to configure it.
</p>

</div>

<h3 class="sectionedit22" id="web_access">Web access</h3>
<div class="level3">

<p>
The primary way to configure these devices is through a web interface. In the initial configuration, the <abbr title="Local Area Network">LAN</abbr> IP address is 192.168.15.1. There is a web server with a management interface running on port 80. The default username is &quot;admin&quot; with a passwoerd of &quot;admin&quot;. If you find that the web server is not running or if the passwoerd &quot;admin&quot; is not accepted, you can reset the router to factory defaults by using a paper clip to hold down the reset button while powering the router up. Continue to hold down the reset button for about 50 seconds.
</p>

</div>

<h3 class="sectionedit23" id="ssh_access">SSH access</h3>
<div class="level3">

<p>
Version 1.00.XX firmwares for both the RTP300 and WRTP54G can run the Dropbear SSH server. This feature must be enabled using the web interface. The only username in &quot;/etc/passwd&quot; is &quot;Admin&quot; (note the upper case &quot;A&quot;). Reliably setting the passwoerd for this account is problematic.
</p>

<p>
SSH access is absent in the official 3.1.XX firmwares, although the controls for it in the web interface remain in 3.1.10.
</p>

</div>

<h3 class="sectionedit24" id="serial_console_access">Serial console access</h3>
<div class="level3">

<p>
This information has been moved to <a href="../../inbox/openwrt-wrtp54g" class="wikilink1" title="toh:linksys:rtp300_and_wrtp54g">Linksys RTP300 and WRTP54G</a>.
</p>

</div>

<h2 class="sectionedit25" id="noteworthy_programs_and_files_in_version_31xx">Noteworthy programs and files in version 3.1.XX</h2>
<div class="level2">
<hr />
<ul>
<li class="level1"><div class="li"> /etc/inittab</div>
<ul>
<li class="level2"><div class="li"> Starts &quot;/etc/init.d/rcS&quot; and starts &quot;/bin/login&quot; or &quot;/bin/sh&quot; on the serial console.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /etc/init.d/rcS</div>
<ul>
<li class="level2"><div class="li"> System startup script. It starts &quot;thttpd&quot;, &quot;lightbox&quot;, &quot;loadmon&quot;, and &quot;cm_pc&quot; (in that order).</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/sbin/thttpd</div>
<ul>
<li class="level2"><div class="li"> The tiny HTTP server.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/loadmon</div>
<ul>
<li class="level2"><div class="li"> Appears to monitor the load average and the activity of some of the &quot;cm_*&quot; processes. It takes note of the file &quot;/var/tmp/fupg_progress&quot;, presumably so not to cause a reboot during a firmware upgrade.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/foxy</div>
<ul>
<li class="level2"><div class="li"> An HTTP proxy server which implements the &quot;filter JavaScript&quot; and other &quot;security&quot; functions.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/wget</div>
<ul>
<li class="level2"><div class="li"> GNU Wget (why not Busybox wget?). This is apparently used to download new firmwares.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/sbin/lightbox</div>
<ul>
<li class="level2"><div class="li"> Mystery program run from &quot;/etc/init.d/rcS&quot;.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/cm_pc</div>
<ul>
<li class="level2"><div class="li"> This daemon is launched from &quot;/etc/init.d/rcS&quot;.</div>
</li>
<li class="level2"><div class="li"> It launches &quot;cm_logic&quot;.</div>
</li>
<li class="level2"><div class="li"> This daemon participates in firmware flashing.  It reads any new firmware that may be written to /var/tmp/fw.bin and writes it to the inactive flash partition.  It then copies the active configuration partition to the inactive configuration partition, arranges in some unknown manner for the next boot to load from the currently inactive partition, and reboots the router, likely by running &quot;cm_reboot&quot;.  If the file &quot;/var/tmp/_skip_reboot&quot; is present, then the reboot is not performed (though the file is removed).  Once the firmware has been flashed, the file &quot;/var/tmp/_upgrade_successful&quot; is created.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/cm_convert</div>
<ul>
<li class="level2"><div class="li"> Converts old voice configuration to the 3.1.XX format. Run once per boot.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/cm_logic</div>
<ul>
<li class="level2"><div class="li"> This daemon seems to load the configuration either from a specified flash block or, if there is no configuration there, from an XML file.</div>
</li>
<li class="level2"><div class="li"> Where the loaded configuration is held is unclear.  Perhaps this daemon serves as keeper of the configuration, or perhaps, it is loaded into shared memory.</div>
</li>
<li class="level2"><div class="li"> This daemon can take parameters indicating the device node of the configuration flash block and the path to config.xml (which stores the default configuration).</div>
</li>
<li class="level2"><div class="li"> Running strings on this binary reveals many interesting file names, some of which are not actually present in the firmware.</div>
<ul>
<li class="level3"><div class="li"> It seems that this program runs &quot;cm_convert&quot;.</div>
</li>
<li class="level3"><div class="li"> It also refers to &quot;/etc/version&quot; and some SSL certificates in &quot;/var/tmp&quot;.</div>
</li>
<li class="level3"><div class="li"> Other messages suggest that this is the program which overwrites &quot;/etc/shadow&quot;.</div>
</li>
<li class="level3"><div class="li"> Messages about login suggest a role in authentication.</div>
</li>
<li class="level3"><div class="li"> There are also many templates for commands to start networking.  This program requires more study.</div>
</li>
</ul>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/cm_config {BACKUP|RESTORE} {ADMIN|USER|ROUTER}</div>
<ul>
<li class="level2"><div class="li"> May be related to &quot;dproxy&quot;, a caching <abbr title="Domain Name System">DNS</abbr> proxy.</div>
</li>
<li class="level2"><div class="li"> Saves and restores the current configuration to and from flash.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/cm_reset {FULL|ROUTER|USER}</div>
<ul>
<li class="level2"><div class="li"> It appears likely that this program copies the default configuration from &quot;/etc/config.xml&quot; to flash.  The systems resets when it is done (unless the option NO_RESET is included).</div>
</li>
<li class="level2"><div class="li"> When the system resets, the lightbox binary appears to run this command with an argument of FULLH.  There is an option CLEAN too.  What it does is unknown.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/cm_monitor</div>
<ul>
<li class="level2"><div class="li"> This program appears to launch &quot;dproxy&quot;, a caching <abbr title="Domain Name System">DNS</abbr> proxy.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/lib/updatedd</div>
<ul>
<li class="level2"><div class="li"> Dynamic <abbr title="Domain Name System">DNS</abbr> client.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/www/cgi-bin/webcm</div>
<ul>
<li class="level2"><div class="li"> Program through which most web pages are loaded.</div>
</li>
<li class="level2"><div class="li"> Implements server-side includes.</div>
</li>
<li class="level2"><div class="li"> Accepts POST requests to change the configuration.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/www/cgi-bin/firmwarecfg</div>
<ul>
<li class="level2"><div class="li"> Target of POST request which uploads a new firmware.</div>
</li>
<li class="level2"><div class="li"> Copies uploaded firmware to &quot;/var/tmp/fw.bin&quot;.</div>
</li>
<li class="level2"><div class="li"> Will accept firmware only from IP named in &quot;/var/tmp/fw_ip&quot;.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /var/tmp/fw_ip</div>
<ul>
<li class="level2"><div class="li"> During a firmware upgrade, stores the IP address, a comma, and the access level (such as &quot;ADMIN&quot;) of the web browser which is updating the firmware.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /var/tmp/fw.bin</div>
<ul>
<li class="level2"><div class="li"> A named pipe to which &quot;/usr/www/cgi-bin/firmwarecfg&quot; writes the uploaded firmware.</div>
</li>
<li class="level2"><div class="li"> The firmware is read by &quot;cm_pc&quot; and written to flash.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /var.tar</div>
<ul>
<li class="level2"><div class="li"> This file is unpacked during boot.  It creates the &quot;/var&quot; directory.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /var/upgrader (from &quot;/var.tar&quot;)</div>
<ul>
<li class="level2"><div class="li"> The purpose of this file is unknown.  One would think that it is somehow involved in upgrading the firmware, but this does not appear to be the case.  Running it reboots the router.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /sbin/reboot</div>
<ul>
<li class="level2"><div class="li"> Restarts the router.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/sbin/ggsip</div>
<ul>
<li class="level2"><div class="li"> The VOIP functions run inside this process.  Many threads show up in the &quot;ps&quot; output as separate processes.</div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> /usr/bin/nmm</div>
<ul>
<li class="level2"><div class="li"> This is some sort of diagnostic tool for the VOIP functions.  It may control ggsip.</div>
</li>
<li class="level2"><div class="li"> When started, it presents a command-line interface.</div>
</li>
</ul>
</li>
</ul>

</div>

<h2 class="sectionedit26" id="firmware_modification">Firmware modification</h2>
<div class="level2">
<hr />

</div>

<h3 class="sectionedit27" id="customized_firmwares">Customized firmwares</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> 3.1.17 firmware with dropbear/ssh enabled for Vonage units attachment:wrtp54g_fw_3.1.17_US.zip  (NOTE: This firmware has a sticky SSH remote administration setting, available to WAN, with Admin enabled and no passwoerd. Blocking port 22 doesn&#039;t seem to help.)</div>
</li>
<li class="level1"><div class="li"> 3.1.27-ETSI firmware with dropbear/ssh enabled for -NA and -ER units attachment:wrt-11.1.1-r070720-3.1.27.ETSI-r070720-aguirre-r080119.img</div>
</li>
</ul>

</div>

<h3 class="sectionedit28" id="working_with_firmware_files">Working with firmware files</h3>
<div class="level3">

<p>
Here are programs which you can use for packing and unpacking firmware image files:
</p>
<ul>
<li class="level1"><div class="li"> Firmware modification Kit attachment:wrtp-mod-kit.tar.bz2  This kit contains programs to pack and unpack firmware images.</div>
</li>
<li class="level1"><div class="li"> Squashfs tools with patches for LZMA compression</div>
</li>
<li class="level1"><div class="li"> David Chappell&#039;s mini scripts:</div>
<ul>
<li class="level2"><div class="li"> Perl script to set ProductID and flag at byte 0x0B: attachment:set_ProductID</div>
</li>
<li class="level2"><div class="li"> Perl script to set CRC: attachment:set_ti_checksum</div>
</li>
</ul>
</li>
</ul>

</div>

<h4 id="firmware_modification_kit">Firmware modification kit</h4>
<div class="level4">

<p>
<strong>extractwrtp</strong> extracts the firmware into the following files:  <em> </em>
</p>
<ul>
<li class="level1"><div class="li"> <strong><em>wrtp.img.root</em></strong><em>&#039;&#039; root file system partition (lzma compressed, use unsquashfs-lzma to extract) </em></div>
</li>
<li class="level1"><div class="li"> <strong>wrtp.img.kernel Kernel</strong><em>&#039;</em>&#039; parition (bootstrap + kernel) <em> </em></div>
</li>
<li class="level1"><div class="li"> <strong>wrtp.img.7zip</strong><em>&#039;</em>&#039; compressed kernel.</div>
</li>
<li class="level1"><div class="li"> <strong>wrtp.img.uncompressed</strong><em>&#039;</em>&#039; uncompressed kernel. <em> </em></div>
</li>
<li class="level1"><div class="li"> <strong>wrtp.img.kernel.bootstrap</strong><em>&#039;</em>&#039; bootstrap code that extract compressed kernel</div>
</li>
<li class="level1"><div class="li"> <strong>wrtp.img.kernel.padding</strong><em>&#039;</em>&#039; padding part of kernel partition. <em> </em></div>
</li>
</ul>

<p>
<strong>buildwrtp</strong> builds the firmware by combining kernel partition and root partition
</p>
<ul>
<li class="level1"><div class="li"> -k  -r  -f  -i  -p  -K  -R </div>
</li>
</ul>

</div>

<h4 id="squashfs_tools">Squashfs tools</h4>
<div class="level4">

<p>
Standard Linux kernels cannot mount the squashfs file system and the standard mksquashfs can not generate it because the compression method is LZMA instead of Zlib.  To pack and unpack these files, you need a patched copy of Squashfs Tools 1.3r3.
</p>

</div>

<h5 id="obtaining_the_squashfs_tools">Obtaining the squashfs tools</h5>
<div class="level5">

<p>
A version of the Squashfs tools which can pack and unpack the firmware can be built from these files:
</p>
<ul>
<li class="level1"><div class="li"> LZMA library: attachment:lzma427.tar.bz2</div>
</li>
<li class="level1"><div class="li"> Patch for the LZMA library: attachment:lzma427_zlib.patch</div>
</li>
<li class="level1"><div class="li"> Patched Squashfs Tools 1.3r3: attachment:squashfs-tools.tar.bz2</div>
</li>
</ul>

<p>
Unfortunately, building the Squashfs tools from the above sources requires some tweaking.  So, you probably will want to use the single archive attachment:squashfs_wrtp.tar.gz which contains all of the above unpacked, properly patched, and correctly linked together, and fixed so that it is buildable with GCC 4.0.  Simply download it, extract it, edit BINDIR in squashfs_wrtp/Makefile, then run <strong>make</strong> and <strong>make install</strong>.
</p>

<p>
Other instructions for building the Squashfs version 1.3r3 tools with LZMA support can be found at <a href="http://www.beyondlogic.org/nb5/squashfs_lzma.htm" class="urlextern" title="http://www.beyondlogic.org/nb5/squashfs_lzma.htm"  rel="nofollow">http://www.beyondlogic.org/nb5/squashfs_lzma.htm</a>.  However, the version produced does not appear to include unsquashfs.
</p>

<p>
What appears to be the official site for the LZMA patches is at: <a href="http://www.squashfs-lzma.org" class="urlextern" title="http://www.squashfs-lzma.org"  rel="nofollow">http://www.squashfs-lzma.org</a>.  So far, no one has reported success manipulating the firmware with these tools.
</p>

</div>

<h5 id="using_the_squashfs_tools">Using the Squashfs tools</h5>
<div class="level5">

<p>
<strong>unsquashfs-lzma</strong> can be used to extract the files from a root partition image (previously extracted from a firmware image file) into a directory
</p>

<p>
<strong>mksquashfs-lzma</strong> packs the contexts of a directory into a root partition image which can subsequently be packed into a firmware image file
</p>

</div>

<h4 id="david_chappell_s_scripts">David Chappell&#039;s scripts</h4>
<div class="level4">

<p>
set_ProductID sets flags in the firmware image header.  The first argument is the name of the firmware image file, the second is the product ID code to set.  If the –tftp switch is used, then the byte at offset 0x14 will be set to the proper value for the firmware to be flashed from the boot loader console.
</p>

<p>
set_ti_checksum calculates a checksum for a firmware file and appends it to the file.  This checksum is required if the file will be installed using the web interface (as opposed to installation from the console).
</p>

</div>

<h2 class="sectionedit29" id="firmware_flashing">Firmware flashing</h2>
<div class="level2">
<hr />

<p>
There are several proven ways to write a new firmware into flash by:
</p>
<ul>
<li class="level1"><div class="li"> <span class="curid"><a href="rtp300#using_the_web_interface" class="wikilink1" title="toh:linksys:rtp300">Using the web interface</a></span></div>
</li>
<li class="level1"><div class="li"> <span class="curid"><a href="rtp300#setting_a_firmware_update_url_on_the_provisioning_page" class="wikilink1" title="toh:linksys:rtp300">Setting a firmware update URL on the provisioning page</a></span></div>
</li>
<li class="level1"><div class="li"> <span class="curid"><a href="rtp300#using_a_firmware_shell_prompt_the_hard_way" class="wikilink1" title="toh:linksys:rtp300">Using a firmware shell prompt (the hard way)</a></span></div>
</li>
<li class="level1"><div class="li"> <span class="curid"><a href="rtp300#using_a_firmware_shell_prompt_the_easy_way" class="wikilink1" title="toh:linksys:rtp300">Using a firmware shell prompt (the easy way)</a></span></div>
</li>
<li class="level1"><div class="li"> <span class="curid"><a href="rtp300#using_the_pspboot_prompt" class="wikilink1" title="toh:linksys:rtp300">Using the PSPBoot prompt</a></span> from a serial console</div>
</li>
</ul>

<p>
It is presumably possible to write a firmware using JTAG, but it would be very slow, at least if one uses a passive cable connected to a computer&#039;s parallel port.
</p>

<p>
The PSPBoot page suggests that there is a one second window during PSPBoot startup during which a TFTP server is ready to accept a new firmware named &quot;upgrade_code.bin&quot;, but this feature does not seem to be included in the build of PSPBoot installed on the RTP300.
</p>

</div>

<h3 class="sectionedit30" id="using_the_web_interface">Using the web interface</h3>
<div class="level3">

<p>
This method ranges from very easy to somewhat tricky depending on what firmware is currently installed. The basic procedure is as follows:
</p>
<ol>
<li class="level1"><div class="li"> Connect a computer to one of the yellow ports of the router</div>
</li>
<li class="level1"><div class="li"> Set the computer to gets its IP address by DHCP and make sure it does so before proceeding</div>
</li>
<li class="level1"><div class="li"> Connect to <a href="http://192.168.15.1" class="urlextern" title="http://192.168.15.1"  rel="nofollow">http://192.168.15.1</a> using a web browser. If it does not respond, hold down the router&#039;s reset button for at least five seconds. When it reboots, try again.</div>
</li>
<li class="level1"><div class="li"> Log in using the default username and passwoerd of &quot;admin&quot; and &quot;admin&quot;</div>
</li>
<li class="level1"><div class="li"> Click on the &quot;Administration&quot; tab</div>
</li>
<li class="level1"><div class="li"> Click on the &quot;Firmware Update&quot; tab. If there is no &quot;Firmware Update&quot; tab, enter <a href="http://192.168.15.1/update.html" class="urlextern" title="http://192.168.15.1/update.html"  rel="nofollow">http://192.168.15.1/update.html</a> in your browser&#039;s location bar.</div>
</li>
<li class="level1"><div class="li"> Log in as a user who is permitted to update the firmware. For NA firmwares the username should be &quot;Admin&quot; with a blank passwoerd or &quot;user&quot; with a passwoerd of &quot;user&quot;.  For routers with version 3.1.14 Earthlink firmware, the username is &quot;Admin&quot; with a passwoerd of &quot;sP0dfub2&quot; (exact capitalization matters).  If your router was last used with Vonage, you can set a username of &quot;user&quot; and a passwoerd of &quot;tivonpw&quot; by following this procedure:</div>
</li>
<li class="level1"><div class="li"> Plug the router into the Internet if it is not plugged in already.</div>
</li>
<li class="level1"><div class="li"> Got to Administration tab and choose Factory Defaults. Choose &quot;Restore Router Defaults&quot; and &quot;Restore Voice Defaults&quot;</div>
</li>
<li class="level1"><div class="li"> Enter a username of &quot;user&quot; and a passwoerd of &quot;tivonpw&quot;</div>
</li>
<li class="level1"><div class="li"> Give the router a minute to reboot and then return to step three.</div>
</li>
<li class="level1"><div class="li"> Click on Browse and choose a firmware image. (If you get an error page instead of the firmware upgrade page, enter <a href="http://192.168.15.1/update.html" class="urlextern" title="http://192.168.15.1/update.html"  rel="nofollow">http://192.168.15.1/update.html</a> into your browser&#039;s location bar. Some firmwares have a broken link.)</div>
</li>
<li class="level1"><div class="li"> If the Internet cable is connected to the router, disconnect it.</div>
</li>
<li class="level1"><div class="li"> Click on Update. A progress bar will move accross the screen. When the bar reaches about 10% the product ID will be checked. After it reaches 100%, the CRC will be checked. If both of these hurdles are passed, a screen will appear announcing that the device is rebooting.</div>
</li>
<li class="level1"><div class="li"> If your router was last used with Vonage, log in again and go to Administration→Factory Defaults and reset both router and voice defaults again. The router has two configuration areas, and the old settings may not be cleared out of active configuration area. If they are not, the router may download and install a firmware that you do not want.</div>
</li>
<li class="level1"><div class="li"> Reconnect the router to the Internet.</div>
</li>
</ol>

<p>
If the web server does not respond in step three, or the default passwoerd does not work in step four, make sure the router has been powered up for at least 50 seconds and then hold down the reset button for at least five seconds. The router will restore its factory defaults and reboot. Return to step three.
</p>

</div>

<h3 class="sectionedit31" id="setting_a_firmware_update_url_on_the_provisioning_page">Setting a firmware update URL on the provisioning page</h3>
<div class="level3">

<p>
VOIP providers can configure these routers to periodically download a VOIP configuration file. This file contains VOIP settings and login credentials for the provider&#039;s SIP server. This process is called &quot;provisioning&quot;. The &quot;provisioning&quot; file can also instruct the router to download and install a new firmware. The Provisioning page in the web interface can also be used to initiate this process. This may be helpful if you loose access the firmware upgrade page but still have access to the Provisioning page. Here is the procedure for the 3.1.XX series firmware:
</p>
<ul>
<li class="level1"><div class="li"> Connect to the web interface and log in as admin</div>
</li>
<li class="level1"><div class="li"> Click on the Voice tab</div>
</li>
<li class="level1"><div class="li"> Click on &quot;Admin Login&quot; hyperlink under the second menu bar</div>
</li>
<li class="level1"><div class="li"> Click on the &quot;switch to advanced view&quot;</div>
</li>
<li class="level1"><div class="li"> Click on the &quot;Provisioning&quot; tab</div>
</li>
<li class="level1"><div class="li"> Enter the <abbr title="Uniform Resource Locator">URL</abbr> of the firmware file (HTTP is fine) in the &quot;upgrade rule&quot; field.</div>
</li>
<li class="level1"><div class="li"> Press &quot;Save&quot;</div>
</li>
<li class="level1"><div class="li"> Watch your HTTP server logs to see if the router grabs the firmware</div>
</li>
</ul>

<p>
The firmware should be in the same format as for upgrading through the web interface.
</p>

</div>

<h3 class="sectionedit32" id="using_a_firmware_shell_prompt_the_hard_way">Using a firmware shell prompt (the hard way)</h3>
<div class="level3">

<p>
You can use this procedure only if you have access to a shell running on the router.  Access is generally obtained either by connecting to the route&#039;s serial port or to its SSH server.
</p>

<p>
Using this procedure, you can write a firmware into one of the two firmware partitions. Note that while you can overwrite the running firmware and reboot, it may not be a safe practice. One can presumably overwrite the inactive firmware, but it is unclear how to then make it the active firmware. This procedure describes how to overwrite the inactive firmware.
</p>
<ul>
<li class="level1"><div class="li"> You will need the flash erase tool (erase.c in the <abbr title="GNU General Public License">GPL</abbr> tarball) compiled to run on the router. ( attachment:flash_erase )</div>
</li>
<li class="level1"><div class="li"> Create a new firmware image. See Firmware Upgrade File Format above. (Briefly, byte 0x000B should be 0x17, there should be no CRC, and the firmware should be exactly 3,866,624 bytes long.)</div>
</li>
<li class="level1"><div class="li"> Download <strong>flash_erase</strong> and the firmware to the router:</div>
</li>
<li class="level1"><div class="li"> <pre class="code">  # cd /var
  # wget http://myhost/dir/flash_erase
  # chmod 755 erase
  # wget http://myhost/dir/rtp300-XXXXX.bin
  </pre>
</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Erase and write the flash block for the inactive firmware copy:</div>
</li>
<li class="level1"><div class="li"> <pre class="code">  # /var/flash_erase /dev/mtd/4 0 60 &amp;&amp; dd if=/var/rtp300-XXXXX.bin of=/dev/mtd/4
  </pre>
</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Figure out which firmware area is currently active:</div>
</li>
<li class="level1"><div class="li"> <pre class="code">  # grep BOOTCFG /proc/ticfg/env
  </pre>
</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> At this point, one would expect to switch to the new firmware by using one of the following commands:</div>
</li>
<li class="level1"><div class="li"> <pre class="code">  # echo &#039;BOOTCFG m:f:&quot;IMAGE_A&quot;&#039; &gt;/proc/ticfg/env
  # echo &#039;BOOTCFG m:f:&quot;IMAGE_B&quot;&#039; &gt;/proc/ticfg/env
  </pre>
</div>
</li>
</ul>

<p>
Unfortunately, setting BOOTCFG does not seem to work.  The only known way to set it is to delete the active firmware (after writing a new one).
</p>

<p>
One could simply overwriting the active firmware (using &quot;/dev/mtd/3&quot;) but it is not recommended since it could crash if something needs to be paged in.  At the very least, you should have a serial console and set CONSOLE_STATE to &quot;unlocked&quot; (and verify it works) before doing this.
</p>

</div>

<h3 class="sectionedit33" id="using_a_firmware_shell_prompt_the_easy_way">Using a firmware shell prompt (the easy way)</h3>
<div class="level3">

<p>
A much easier way to flash a new firmware from the router shell prompt has recently been discovered.
</p>

<p>
You can use this procedure only if you have access to a shell running on the router.  Access is generally obtained either by connecting to the route&#039;s serial port or to its SSH server.
</p>

<p>
<pre class="code"># cd /var
# wget http://myhost/dir/rtp300-XXXXX.bin
# dd if=rtp300-XXXXX.bin of=/var/tmp/fw.bin</pre>

</p>

<p>
If the new firmware is accepted, it will be written to the inactive flash partition, the active configuration partition will be copied to the inactive one, BOOTCFG will be set to boot from the new firmware (exactly how is unclear), and the router will reset and the new firmware will be bootstrapped.
</p>

</div>

<h3 class="sectionedit34" id="using_the_pspboot_prompt">Using the PSPBoot prompt</h3>
<div class="level3">

<p>
In order to use this method, you must obtain or make a voltage converting cable for your router&#039;s serial port and hook it up as described in the section Serial Port. You must also change the value of CONSOLE_STATE as described in the same section. Since you need shell access to the router in order to change CONSOLE_STATE, you will not be able to use this method unless the existing firmware allows shell access or you set CONSOLE_STATE when you last had access.
</p>

<p>
The PSPBoot boot loader has predefined environment variables called IMAGE_A and IMAGE_B which contain the start and stop addresses of the mtd3 and mtd4 flash partitions. A new firmware can be loaded into one of the spaces by formatting the space and copying in a properly formated firmware file using TFTP. For example, if you have a firmware called new_firmware.bin on a TFTP server on a computer attached to one of the yellow ports with an IP address of 192.168.15.100, the commands are like this:
</p>

<p>
<pre class="code">(psbl) setenv IPA 192.168.15.1
(psbl) fmt IMAGE_A
FlashEraseBlock(b0020000,b03dffff);
............................................................
(psbl) tftp -i 192.168.15.100 new_firmware.bin IMAGE_A
......................................................</pre>

</p>

<p>
Flashing the firmware in this way is much slower than flashing it through the web interface, but much faster than through JTAG.
</p>

<p>
If your TFTP server is not in the same subnet or if the subnet mask is not 255.255.255.0, you will have to set additional environment variables, as described in <span class="curid"><a href="rtp300#environment_variables" class="wikilink1" title="toh:linksys:rtp300">Boot loader environment variables</a></span>.
</p>

</div>

<h2 class="sectionedit35" id="recovery">Recovery</h2>
<div class="level2">
<hr />

</div>

<h3 class="sectionedit36" id="hardware_recovery">Hardware recovery</h3>
<div class="level3">

</div>

<h4 id="jtag">JTAG</h4>
<div class="level4">

<p>
The information in this section has been moved to <a href="../../inbox/openwrt-wrtp54g" class="wikilink1" title="toh:linksys:rtp300_and_wrtp54g">Linksys RTP300 and WRTP54G</a>.
</p>

</div>

<h3 class="sectionedit37" id="software_recovery">Software recovery</h3>
<div class="level3">

<p>
It is fairly easy to lock yourself out of the router by setting a bad passwoerd or installing a bad firmware.  Please add tips for regaining access to this section.
</p>

</div>

<h4 id="unlocking_tools">Unlocking tools</h4>
<div class="level4">

<p>
The CYT Device Unlock tools were written in order to gain access to routers previously used with Vonage.  This tool resets the passwoerd for the Admin account and the user account so that you can have access to the firmware upgrade screens and the SIP settings.  Note that this tool clears all settings, not just the passwoerds.  This is the current <abbr title="Uniform Resource Locator">URL</abbr> location for the tool:
</p>

<p>
<a href="http://www.bargainshare.com/index.php?showtopic=87504" class="urlextern" title="http://www.bargainshare.com/index.php?showtopic=87504"  rel="nofollow">http://www.bargainshare.com/index.php?showtopic=87504</a>
</p>

</div>

<h4 id="ping_hack">Ping hack</h4>
<div class="level4">

<p>
One can execute commands on the router with many versions of the firmware by going to Administration &gt; Diagnostics, pressing the Ping button, end entering a dummy IP address followed by a space, a double ampersand, and a space followed by a short command, like so:
</p>

<p>
 0.0.0.0 &amp;&amp; ls -l /
</p>

<p>
The first word on the line (0.0.0.0 in this case) must be parsable as an IP address, otherwise you will see the message &quot;Unknown host&quot; and nothing will be executed.  If the first word is valid, then it will seem as if nothing has happened, but a few seconds later the page will reload and your output will be displayed in the bit textarea.
</p>

<p>
The size of the text entry field for the IP address is small.  You may have to download and hack the <abbr title="HyperText Markup Language">HTML</abbr> in order to widen it.  If you do, you should be able to fit a wget command to download a small shell script containing the commands necessary to flash the router.  You can then use the ping hack again to run the shell script.
</p>

</div>

<h2 class="sectionedit38" id="openwrt">OpenWrt</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> Get console working (See 14. Serial Console)</div>
</li>
<li class="level1"><div class="li"> Use Ping Hack to get a shell</div>
</li>
<li class="level1"><div class="li"> Unlock psbl (See 14. Serial Console)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Download OpenWrt trunk or 8.09, patch it as <a href="https://dev.openwrt.org/ticket/6185" class="urlextern" title="https://dev.openwrt.org/ticket/6185"  rel="nofollow">https://dev.openwrt.org/ticket/6185</a>, configure and build, get openwrt-ar7-squashfs.bin</div>
</li>
<li class="level1"><div class="li"> Prepend header according to 12. Firmware Update File Format with wrtp-mod-kit.tar.bz2</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Go to psbl prompt with serial cable, fmt both IMAGE_A and IMAGE_B, flash the OpenWrt image into them</div>
</li>
<li class="level1"><div class="li"> After booting and then OpenWrt is up, have fun.</div>
</li>
</ul>

<p>
If your router can boot only once after flashed, and will stop at PSPBoot the second time, go and check <a href="../../inbox/openwrt-wrtp54g#reboot.problem" class="urlextern" title="http://wiki.openwrt.org/inbox/openwrt-wrtp54g#reboot.problem"  rel="nofollow">http://wiki.openwrt.org/inbox/openwrt-wrtp54g#reboot.problem</a>
</p>

<p>
Another way is disabling jffs2: modify &quot;/bin/firstboot&quot; or &quot;/sbin/firstboot&quot; to disable jffs2 mounting.
</p>

</div>

<h2 class="sectionedit39" id="notes">Notes</h2>
<div class="level2">

</div>

<h3 class="sectionedit40" id="miscellaneous_notes">Miscellaneous notes</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> CyberTAN is a subcontractor for Linksys, and its name appears in the router&#039;s source code (even in the source code archive&#039;s name: _cyt_).</div>
</li>
<li class="level1"><div class="li"> The VoIP daemon, located &quot;/usr/sbin/ggsip&quot;, appears to be &quot;RADVISION SIP TOOLKIT 3.0.5.1&quot;.</div>
</li>
<li class="level1"><div class="li"> The telephony chip is the Microsemi Le88221, part of the VE880 series. Information, Documentation and Software for the VE880 device can be found on the Microsemi Web Site <a href="http://www.microsemi.com/voice-line-circuits" class="urlextern" title="http://www.microsemi.com/voice-line-circuits"  rel="nofollow">here</a>. <a href="http://mirror2.openwrt.org/ref/VoicePath%20API-II%20Lite%202.11.3.7z" class="urlextern" title="http://mirror2.openwrt.org/ref/VoicePath%20API-II%20Lite%202.11.3.7z"  rel="nofollow">Here</a> are the <abbr title="GNU General Public License">GPL</abbr> drivers for this hardware based on the Microsemi VoicePath <abbr title="Application Programming Interface">API</abbr>-II P2.11.3 (March 2008). Contact Microsemi FAE, Sales or Customer Support for an updated version of the VP-<abbr title="Application Programming Interface">API</abbr>-II.</div>
</li>
<li class="level1"><div class="li"> A channel on Freenode, <a href="irc://irc.freenode.org/wrtp54g" class="urlextern" title="irc://irc.freenode.org/wrtp54g"  rel="nofollow">#wrtp54g</a> is where those devoted to hacking the RTP300 and WRTP54G hang out.</div>
</li>
<li class="level1"><div class="li"> There is information about Linux on AR7 at <a href="http://www.linux-mips.org/wiki/AR7" class="urlextern" title="http://www.linux-mips.org/wiki/AR7"  rel="nofollow">http://www.linux-mips.org/wiki/AR7</a>.</div>
</li>
</ul>

</div>

<h3 class="sectionedit41" id="external_links">External links</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> A number of the common <a href="http://www.mvista.com/" class="urlextern" title="http://www.mvista.com/"  rel="nofollow">MontaVista</a> Linux router tools are found (&quot;cm_logic&quot;, &quot;webcm&quot;, etc) on these devices. The following page describes some very interesting hacking techniques that likely also apply to the RTP300 and WRTP54G: <a href="http://sub.st/articles/hacking-the-actiontec-gt701/" class="urlextern" title="http://sub.st/articles/hacking-the-actiontec-gt701/"  rel="nofollow">http://sub.st/articles/hacking-the-actiontec-gt701/</a>.</div>
</li>
<li class="level1"><div class="li"> The Seattle Wireless site has a page about the Dlink DSLG604T which has similiar firmware: <a href="http://www.seattlewireless.net/index.cgi/DlinkDslG604t#head-db677a483bdc0cc440a9deb157e737a99a078edb" class="urlextern" title="http://www.seattlewireless.net/index.cgi/DlinkDslG604t#head-db677a483bdc0cc440a9deb157e737a99a078edb"  rel="nofollow">http://www.seattlewireless.net/index.cgi/DlinkDslG604t#head-db677a483bdc0cc440a9deb157e737a99a078edb</a>.</div>
</li>
<li class="level1"><div class="li"> Linux-MIPS port page about the AR7: <a href="http://www.linux-mips.org/wiki/AR7" class="urlextern" title="http://www.linux-mips.org/wiki/AR7"  rel="nofollow">http://www.linux-mips.org/wiki/AR7</a>.</div>
</li>
<li class="level1"><div class="li"> Some of the information on this page is derived from Linksysinfo.org: <a href="http://www.linksysinfo.org/forums/archive/index.php?t-37891.html" class="urlextern" title="http://www.linksysinfo.org/forums/archive/index.php?t-37891.html"  rel="nofollow">http://www.linksysinfo.org/forums/archive/index.php?t-37891.html</a>.</div>
</li>
</ul>

</div>

<h2 class="sectionedit42" id="tags">Tags</h2>
<div class="level2">
<div class="tags"><span>
	<a href="../../tag/lantiq?do=showtag&amp;tag=lantiq" class="wikilink1" title="tag:lantiq" rel="tag">lantiq</a>,
	<a href="../../tag/ar7?do=showtag&amp;tag=ar7" class="wikilink1" title="tag:ar7" rel="tag">ar7</a>,
	<a href="../../tag/adsl2?do=showtag&amp;tag=adsl2%252B" class="wikilink1" title="tag:adsl2" rel="tag">adsl2+</a>
</span></div>

</div>

                    <!-- wikipage stop -->
                                    </div>

                <div class="docInfo"><bdi>toh/linksys/rtp300.txt</bdi> · Last modified: 2013/06/23 22:19 by <bdi>lorema</bdi></div>

                            </div></div><!-- /content -->

            <hr class="a11y" />

            <!-- PAGE ACTIONS -->
            <div id="dokuwiki__pagetools">
                <h3 class="a11y">Page Tools</h3>
                <div class="tools">
                    <ul>
                        <li><a href="rtp300?do=edit"  class="action source" accesskey="v" rel="nofollow" title="Show pagesource [V]"><span>Show pagesource</span></a></li><li><a href="rtp300?do=revisions"  class="action revs" accesskey="o" rel="nofollow" title="Old revisions [O]"><span>Old revisions</span></a></li><li><a href="rtp300?do=backlink"  class="action backlink" rel="nofollow" title="Backlinks"><span>Backlinks</span></a></li><li><a href="rtp300#dokuwiki__top"  class="action top" accesskey="t" rel="nofollow" title="Back to top [T]"><span>Back to top</span></a></li>                    </ul>
                </div>
            </div>
        </div><!-- /wrapper -->

        
<!-- ********** FOOTER ********** -->
<div id="dokuwiki__footer"><div class="pad">
    <div class="license">Except where otherwise noted, content on this wiki is licensed under the following license: <bdi><a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license" class="urlextern">CC Attribution-Noncommercial-Share Alike 3.0 Unported</a></bdi></div>
    <div class="buttons">
        <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license"><img src="../../lib/images/license/button/cc-by-nc-sa.png" alt="CC Attribution-Noncommercial-Share Alike 3.0 Unported" /></a>        <a href="http://www.dokuwiki.org/donate" title="Donate" ><img
            src="../../lib/tpl/openwrt/images/button-donate.gif" width="80" height="15" alt="Donate" /></a>
        <a href="http://www.php.net" title="Powered by PHP" ><img
            src="../../lib/tpl/openwrt/images/button-php.gif" width="80" height="15" alt="Powered by PHP" /></a>
        <a href="http://validator.w3.org/check/referer" title="Valid HTML5" ><img
            src="../../lib/tpl/openwrt/images/button-html5.png" width="80" height="15" alt="Valid HTML5" /></a>
        <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3" title="Valid CSS" ><img
            src="../../lib/tpl/openwrt/images/button-css.png" width="80" height="15" alt="Valid CSS" /></a>
        <a href="http://dokuwiki.org/" title="Driven by DokuWiki" ><img
            src="../../lib/tpl/openwrt/images/button-dw.png" width="80" height="15" alt="Driven by DokuWiki" /></a>
    </div>
</div></div><!-- /footer -->

    </div></div><!-- /site -->

    <div class="no"><img src="../../lib/exe/indexer.php?id=toh%253Alinksys%253Artp300&amp;1432270943" width="2" height="1" alt="" /></div>
    <div id="screen__mode" class="no"></div>    <!--[if ( lte IE 7 | IE 8 ) ]></div><![endif]-->
</body>
</html>
