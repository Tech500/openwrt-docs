<!DOCTYPE html>
<html lang="en" dir="ltr" class="no-js">
<head>
    <meta charset="utf-8" />
    <title>Attach functions to a push button [OpenWrt Wiki]</title>
    <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    <meta name="generator" content="DokuWiki"/>
<meta name="robots" content="index,follow"/>
<meta name="keywords" content="doc,howto,hardware.button"/>
<link rel="search" type="application/opensearchdescription+xml" href="../../lib/exe/opensearch.php" title="OpenWrt Wiki"/>
<link rel="start" href="../../index.html"/>
<link rel="contents" href="hardware.button?do=index" title="Sitemap"/>
<link rel="alternate" type="application/rss+xml" title="Recent changes" href="../../feed.php"/>
<link rel="alternate" type="application/rss+xml" title="Current namespace" href="../../feed.php?mode=list&amp;ns=doc:howto"/>
<link rel="alternate" type="text/html" title="Plain HTML" href="../../_export/xhtml/doc/howto/hardware.button"/>
<link rel="alternate" type="text/plain" title="Wiki Markup" href="../../_export/raw/doc/howto/hardware.button"/>
<link rel="canonical" href="hardware.button"/>
<link rel="stylesheet" type="text/css" href="../../lib/exe/css.php?t=openwrt&amp;tseed=6f44f363dc87908d905dc56ff3acbfc4"/>
<script type="text/javascript">/*<![CDATA[*/var NS='doc:howto';var JSINFO = {"id":"doc:howto:hardware.button","namespace":"doc:howto"};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php?tseed=6f44f363dc87908d905dc56ff3acbfc4"></script>
<script type="text/javascript" charset="utf-8">/*<![CDATA[*/jQuery(function(){
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1432265808 166.182.3.44';
			document.forms[i].appendChild(myElement);
		}
	}
});
/*!]]>*/</script>
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="shortcut icon" href="../../lib/tpl/openwrt/images/favicon.ico" />
<link rel="apple-touch-icon" href="../../lib/tpl/openwrt/images/apple-touch-icon.png" />
    </head>

<body>
    <!--[if lte IE 7 ]><div id="IE7"><![endif]--><!--[if IE 8 ]><div id="IE8"><![endif]-->
    <div id="dokuwiki__site"><div id="dokuwiki__top" class="site dokuwiki mode_show tpl_openwrt     ">

        
<!-- ********** HEADER ********** -->
<div id="dokuwiki__header"><div class="pad group">

    
    <div class="headings group">
        <ul class="a11y skip">
            <li><a href="hardware.button#dokuwiki__content">skip to content</a></li>
        </ul>

        <h1><a href="../../start"  accesskey="h" title="[H]"><img src="../../lib/tpl/openwrt/images/logo.png" width="386" height="98" alt="" /> <span>OpenWrt Wiki</span></a></h1>
            </div>

    <div class="tools group">
        <!-- USER TOOLS -->
                    <div id="dokuwiki__usertools">
                <h3 class="a11y">User Tools</h3>
                <ul>
                    <li><a href="hardware.button?do=register"  class="action register" rel="nofollow" title="Register">Register</a></li><li><a href="hardware.button?do=login&amp;sectok=382740b13d95f946eed36caa57076b4a"  class="action login" rel="nofollow" title="Login">Login</a></li>                </ul>
            </div>
        
        <!-- SITE TOOLS -->
        <div id="dokuwiki__sitetools">
            <h3 class="a11y">Site Tools</h3>
            <form action="../../start" accept-charset="utf-8" class="search" id="dw__search" method="get" role="search"><div class="no"><input type="hidden" name="do" value="search" /><input type="text" id="qsearch__in" accesskey="f" name="id" class="edit" title="[F]" /><input type="submit" value="Search" class="button" title="Search" /><div id="qsearch__out" class="ajax_qsearch JSpopup"></div></div></form>            <div class="mobileTools">
                <form action="../../doku.php" method="get" accept-charset="utf-8"><div class="no"><input type="hidden" name="id" value="doc:howto:hardware.button" /><select name="do" class="edit quickselect" title="Tools"><option value="">Tools</option><optgroup label="Page Tools"><option value="edit">Show pagesource</option><option value="revisions">Old revisions</option><option value="backlink">Backlinks</option></optgroup><optgroup label="Site Tools"><option value="recent">Recent changes</option><option value="media">Media Manager</option><option value="index">Sitemap</option></optgroup><optgroup label="User Tools"><option value="login">Login</option><option value="register">Register</option></optgroup></select><input type="submit" value="&gt;" /></div></form>            </div>
            <ul>
                <li><a href="hardware.button?do=recent"  class="action recent" accesskey="r" rel="nofollow" title="Recent changes [R]">Recent changes</a></li><li><a href="hardware.button?do=media&amp;ns=doc%253Ahowto"  class="action media" rel="nofollow" title="Media Manager">Media Manager</a></li><li><a href="hardware.button?do=index"  class="action index" accesskey="x" rel="nofollow" title="Sitemap [X]">Sitemap</a></li>            </ul>
        </div>

    </div>

    <!-- BREADCRUMBS -->
            <div class="breadcrumbs">
                            <div class="youarehere"><span class="bchead">You are here: </span><span class="home"><bdi><a href="../../start" class="wikilink1" title="start">OpenWrt Wiki</a></bdi></span> » <bdi><a href="../start" class="wikilink1" title="doc:start">Documentation</a></bdi> » <bdi><a href="start" class="wikilink1" title="doc:howto:start">HOWTOs</a></bdi> » <bdi><span class="curid"><a href="hardware.button" class="wikilink1" title="doc:howto:hardware.button">Attach functions to a push button</a></span></bdi></div>
                                    <div class="plugin_multilingual">
        <ul>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/cz/doc/howto/hardware.button" class="media" title="cz:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=aff589&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fcz.gif" class="media" title="Čeština (Czech)" alt="Čeština (Czech)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/de/doc/howto/hardware.button" class="media" title="de:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=e24010&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fde.gif" class="media" title="Deutsch (German)" alt="Deutsch (German)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <span class="curid"><a href="hardware.button" class="media" title="doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=2a37ae&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fgb.gif" class="media" title="English" alt="English" /></a></span>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/es/doc/howto/hardware.button" class="media" title="es:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=46c004&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fmx.gif" class="media" title="Español (Spanish, Mexico)" alt="Español (Spanish, Mexico)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/fr/doc/howto/hardware.button" class="media" title="fr:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=a5beba&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Ffr.gif" class="media" title="Français (French)" alt="Français (French)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/hu/doc/howto/hardware.button" class="media" title="hu:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=6b5470&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fhu.gif" class="media" title="Magyar (Hungarian)" alt="Magyar (Hungarian)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/jp/doc/howto/hardware.button" class="media" title="jp:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=f999fc&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fjp.gif" class="media" title="日本語 (Japanese)" alt="日本語 (Japanese)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/pl/doc/howto/hardware.button" class="media" title="pl:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=c805c0&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fpl.gif" class="media" title="Poliski (Polish)" alt="Poliski (Polish)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/pt-br/doc/howto/hardware.button" class="media" title="pt-br:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=13127d&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fbr.gif" class="media" title="Português brasileiro (Portuguese, Brasil)" alt="Português brasileiro (Portuguese, Brasil)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/ru/doc/howto/hardware.button" class="media" title="ru:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=66ab5e&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fru.gif" class="media" title="Русский (Russsian)" alt="Русский (Russsian)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/tr/doc/howto/hardware.button" class="media" title="tr:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=f4beed&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Ftr.gif" class="media" title="Tϋrkçe (Turkish)" alt="Tϋrkçe (Turkish)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/zh-cn/doc/howto/hardware.button" class="media" title="zh-cn:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=93625a&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fzh-cn.gif" class="media" title="官話/官话 (Chinese)" alt="官話/官话 (Chinese)" /></a>
              </div>
            </div>
          </li>
          <li>
            <div class="li">
              <div class="flag_not_exists">
                <a href="http://wiki.openwrt.org/zh-tw/doc/howto/hardware.button" class="media" title="zh-tw:doc:howto:hardware.button"><img src="../../lib/exe/fetch.php?cache=&amp;tok=b56198&amp;media=http%253A%252F%252Fwiki.openwrt.org%252Flib%252Fplugins%252Fmultilingual%252Fflags%252Fzh-tw.gif" class="media" title="臺灣華語 (Taiwanese)" alt="臺灣華語 (Taiwanese)" /></a>
              </div>
            </div>
          </li>
        </ul>
      </div>
        </div>
    
    
    <hr class="a11y" />
</div></div><!-- /header -->

        <div class="wrapper group">

            
            <!-- ********** CONTENT ********** -->
            <div id="dokuwiki__content"><div class="pad group">

                <div class="pageId"><span>doc:howto:hardware.button</span></div>

                <div class="page group">
                                                            <!-- wikipage start -->
                    <!-- TOC START -->
<div id="dw__toc">
<h3 class="toggle">Table of Contents</h3>
<div>

<ul class="toc">
<li class="level1"><div class="li"><a href="hardware.button#procd_buttons">procd buttons</a></div></li>
<li class="level1"><div class="li"><a href="hardware.button#hotplug_buttons">Hotplug Buttons</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="hardware.button#preliminary_steps">Preliminary steps</a></div></li>
<li class="level2"><div class="li"><a href="hardware.button#using_atheros_00-button_uci">Using Atheros&#039; 00-button + UCI</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="hardware.button#examples">Examples</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="hardware.button#leftovers_from_a_previous_version">Leftovers from a previous version</a></div></li>
<li class="level2"><div class="li"><a href="hardware.button#wr1043nd">WR1043ND</a></div></li>
</ul>
</li>
<li class="level1"><div class="li"><a href="hardware.button#hid_buttons">HID buttons</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="hardware.button#triggerhappy">triggerhappy</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="hardware.button#installation">Installation</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="hardware.button#notes">Notes</a></div></li>
<li class="level2"><div class="li"><a href="hardware.button#cmdpad">cmdpad</a></div></li>
</ul></li>
</ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1" id="attach_functions_to_a_push_button">Attach functions to a push button</h1>
<div class="level1">

<p>
There several ways for controlling buttons in OpenWrt.
</p>
<ul>
<li class="level1"><div class="li"> <a href="hardware.button#procd_buttons" title="doc:howto:hardware.button ↵" class="wikilink1"> buttons using procd</a></div>
</li>
<li class="level1"><div class="li"> <a href="hardware.button#hotplugbuttons" title="doc:howto:hardware.button ↵" class="wikilink1">Hotplug buttons</a>, using the hotplug daemon or procd in compatibility mode (hotplug itself was phased out with r36003).</div>
</li>
<li class="level1"><div class="li"> <a href="hardware.button#hidbuttons" title="doc:howto:hardware.button ↵" class="wikilink1">HID buttons</a>, using <em>/dev/input/event</em> with an application like triggerhappy.</div>
</li>
</ul>
<div class="table sectionedit2"><table class="inline">
	<tr class="row0">
		<td class="col0"> <img src="../../_media/meta/icons/tango/dialog-information.png" class="media" alt="" /> </td><td class="col1"> <strong>Kernel configuration</strong><br/>
If a target platform is known to support buttons, appropriate kernel modules are selected by default.<br/>
If a platform is not known to support buttons, you are required to install various kernel modules yourself such as <code>diag</code>, <code>input-gpio-buttons</code>, <code>gpio-button-hotplug</code>, and others.<br/>
However, installing various modules will not necessarily yield a successful result. </td>
	</tr>
</table></div>

</div>

<h2 class="sectionedit3" id="procd_buttons">procd buttons</h2>
<div class="level2">

<p>
native button handling in procd is handled by scripts in <code>&#039;/etc/rc.button/*</code>&#039;
</p>

<p>
These scripts receive the <strong>same</strong> environment as older style hotplug buttons received.  However, the script files have to be named after the button.  I am unaware of a way of getting the button name.  (Other than using hotplug compatible scripts with procd ;)
</p>

</div>

<h2 class="sectionedit4" id="hotplug_buttons">Hotplug Buttons</h2>
<div class="level2">
<div class="table sectionedit5"><table class="inline">
	<tr class="row0">
		<td class="col0 rightalign">  <img src="../../_media/meta/icons/tango/48px-outdated.svg.png" class="media" alt="" /> </td><td class="col1"> Note that after the introduction of <strong><code><a href="../techref/procd" class="wikilink1" title="doc:techref:procd">procd</a></code></strong> into OpenWrt in <a href="https://dev.openwrt.org/changeset/37132" class="urlextern" title="https://dev.openwrt.org/changeset/37132"  rel="nofollow">r37132</a> the package <code>hotplug2</code> has been removed from the default packages.  However at the time of writing, <a href="https://dev.openwrt.org/changeset/37336" class="urlextern" title="https://dev.openwrt.org/changeset/37336"  rel="nofollow">r37336: procd: make old button hotplug rules work until all packages are migrated</a> is still in effect.  See also <a href="hardware.button#procdbuttons" title="doc:howto:hardware.button ↵" class="wikilink1">procd.buttons</a> </td>
	</tr>
	<tr class="row1">
		<td class="col0"> <img src="../../lib/images/smileys/fixme.gif" class="icon" alt="FIXME" /> </td><td class="col1 leftalign"> Please read the articles <a href="wifitoggle" class="wikilink1" title="doc:howto:wifitoggle">wifitoggle</a>, <a href="../../toh/tp-link/tl-wr741nd#buttons" class="wikilink1" title="toh:tp-link:tl-wr741nd">buttons</a> and <a href="../../toh/linksys/nslu2/nslu2.hardware.button" class="wikilink1" title="toh:linksys:nslu2:nslu2.hardware.button">nslu2.hardware.button</a> and eventually merge them into this one article  </td>
	</tr>
</table></div>

</div>

<h3 class="sectionedit6" id="preliminary_steps">Preliminary steps</h3>
<div class="level3">

<p>
The first step is to find out the internal name of the button you want to use: some images use generic names such as <code>BTN_1</code>, <code>BTN_2</code>, others have more specific ones like <code>reset</code>, <code>wps</code>, etc. Run the following:
</p>

<p>
<pre class="code bash"><span class="co4"># </span><span class="kw2">mkdir</span> <span class="re5">-p</span> <span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button</pre>

</p>

<p>
Create the file <code>/etc/hotplug.d/button/buttons</code> with your favorite text editor, paste the following:
</p>

<p>
<pre class="code bash"><span class="co0">#!/bin/sh</span>
logger the button was <span class="re1">$BUTTON</span> and the action was <span class="re1">$ACTION</span> </pre>

</p>

<p>
Save and exit. Now press the button you want to use, then run <code>logread</code>.
</p>

<p>
<pre class="code bash">Jan <span class="nu0">1</span> 00:01:<span class="nu0">15</span> OpenWrt user.notice root: BTN_1   
Jan <span class="nu0">1</span> 00:01:<span class="nu0">15</span> OpenWrt user.notice root: pressed   
Jan <span class="nu0">1</span> 00:01:<span class="nu0">16</span> OpenWrt user.notice root: BTN_1    
Jan <span class="nu0">1</span> 00:01:<span class="nu0">16</span> OpenWrt user.notice root: released </pre>

</p>

<p>
<code>BTN_1</code> is the name of the button you want to use. If you want or need to use another button, replace every instance of <code>BTN_1</code> in the rest of this document with the correct text. From now on, there are several possible approaches: the first uses the <code>00-button</code> script from the <code>atheros</code> target, the other a simpler shell script.
</p>

<p>
<strong>notice</strong>
</p>

<p>
If you want to run programs from hotplug&#039;s scripts you need to be sure <code>PATH</code> and the like are initialized properly, scripts invoked by hotplug only have a default env. Especially if you install stuff into nonstandard locations like /opt/usr/bin. It&#039;s possible by adding <code>. /etc/profile</code> after <code>#!/bin/sh</code>
</p>

<p>
<pre class="code bash"><span class="co0">#!/bin/sh</span>
. <span class="sy0">/</span>etc<span class="sy0">/</span>profile</pre>

</p>

</div>

<h3 class="sectionedit7" id="using_atheros_00-button_uci">Using Atheros&#039; 00-button + UCI</h3>
<div class="level3">

<p>
If you&#039;ve installed the full version of <code>wget</code>, run the following:
</p>

<p>
<pre class="code bash"><span class="co4"># </span><span class="kw2">wget</span> <span class="re5">-O</span> <span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button<span class="sy0">/</span>00-button https:<span class="sy0">//</span>dev.openwrt.org<span class="sy0">/</span>export<span class="sy0">/</span><span class="nu0">36332</span><span class="sy0">/</span>trunk<span class="sy0">/</span>target<span class="sy0">/</span>linux<span class="sy0">/</span>atheros<span class="sy0">/</span>base-files<span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button<span class="sy0">/</span>00-button</pre>

</p>

<p>
If you only have <code>wget-nossl</code> and don&#039;t want to or can&#039;t upgrade, create <code>/etc/hotplug.d/button/00-button</code> with your favorite editor, then paste the following:
</p>

<p>
<pre class="code bash"><span class="co0">#!/bin/sh</span>
. <span class="sy0">/</span>lib<span class="sy0">/</span>functions.sh
do_button <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="kw3">local</span> button
        <span class="kw3">local</span> action
        <span class="kw3">local</span> handler
        <span class="kw3">local</span> min
        <span class="kw3">local</span> max
&nbsp;
        config_get button <span class="re4">$1</span> button
        config_get action <span class="re4">$1</span> action
        config_get handler <span class="re4">$1</span> handler
        config_get min <span class="re4">$1</span> min
        config_get max <span class="re4">$1</span> max
&nbsp;
        <span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$ACTION</span>&quot;</span> = <span class="st0">&quot;<span class="es2">$action</span>&quot;</span> <span class="re5">-a</span> <span class="st0">&quot;<span class="es2">$BUTTON</span>&quot;</span> = <span class="st0">&quot;<span class="es2">$button</span>&quot;</span> <span class="re5">-a</span> <span class="re5">-n</span> <span class="st0">&quot;<span class="es2">$handler</span>&quot;</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#123;</span>
                <span class="br0">&#91;</span> <span class="re5">-z</span> <span class="st0">&quot;<span class="es2">$min</span>&quot;</span> <span class="re5">-o</span> <span class="re5">-z</span> <span class="st0">&quot;<span class="es2">$max</span>&quot;</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> <span class="kw3">eval</span> <span class="re1">$handler</span>
                <span class="br0">&#91;</span> <span class="re5">-n</span> <span class="st0">&quot;<span class="es2">$min</span>&quot;</span> <span class="re5">-a</span> <span class="re5">-n</span> <span class="st0">&quot;<span class="es2">$max</span>&quot;</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#123;</span>
                        <span class="br0">&#91;</span> <span class="re1">$min</span> <span class="re5">-le</span> <span class="re1">$SEEN</span> <span class="re5">-a</span> <span class="re1">$max</span> <span class="re5">-ge</span> <span class="re1">$SEEN</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> <span class="kw3">eval</span> <span class="re1">$handler</span>
                <span class="br0">&#125;</span>
        <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
config_load system
config_foreach do_button button</pre>

</p>

<p>
Please note that after r34793 /etc/functions.sh → /lib/functions.sh so if you are using an old version change it!
</p>

<p>
Save and exit, then issue these commands:
</p>

<p>
<pre class="code bash">uci add system button    
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=pressed
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'logger BTN_1 pressed'</span>
uci commit system </pre>

</p>

<p>
<code>button</code> is the name as the button, <code>action</code> is the event (two values: <code>pressed</code> and <code>released</code>), handler contains the command line to be run when the event is detected (can be a script as well).
</p>

<p>
You may need to reboot the router the make the change effective (mine would work with the simple shell script just fine but wouldn&#039;t budge when using the 00-button script — <em>Frex 2011/03/25 22:29</em>). If this works, you can change the handler to something more useful, and add more button handlers.
</p>

</div>

<h4 id="examples">Examples</h4>
<div class="level4">

<p>
<strong>Example 1:</strong> <em>Toggle Wi-Fi radio with a button press</em>
</p>

<p>
<pre class="code bash">uci add system button    
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=wps    
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=pressed
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'uci set wireless.@wifi-device[0].disabled=1 &amp;&amp; wifi'</span>
uci commit system </pre>

</p>

<p>
<strong>Example 2:</strong> <em>Assign two different functions to the same button: short press VS long press. This relies on tracking the </em>released<em> event rather than the </em>pressed<em> event.</em>
</p>

<p>
<pre class="code bash">uci add system button
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=released
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'logger timed pressed: 0-3s'</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.min=<span class="nu0">0</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.max=<span class="nu0">3</span>
uci add system button
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=released
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'logger timed pressed: 8-10s'</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.min=<span class="nu0">8</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.max=<span class="nu0">10</span>
uci commit system </pre>

</p>

<p>
<strong>Example 3:</strong> <em>Unmount USB storage using a long-ish press</em>
<pre class="code bash">uci add system button
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=released
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st0">&quot;for i in <span class="es1">\$</span>(mount | awk '/dev\/sd[b-z]/ { print <span class="es1">\$</span>1}'); do umount <span class="es1">\$</span>i; done&quot;</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.min=<span class="nu0">5</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.max=<span class="nu0">10</span>
uci commit system </pre>

</p>

<p>
<strong>Example 4:</strong> <em>Restore defaults</em>
<pre class="code bash">config button
        option button   reset
        option action   released
        option handler  <span class="st0">&quot;firstboot &amp;&amp; reboot&quot;</span>
        option min              <span class="nu0">5</span>
        option max             <span class="nu0">30</span></pre>

</p>

<p>
<strong>Example 5:</strong> <em>Toggle Wi-Fi using a script</em>
<pre class="code bash">config button
        option button   wps
        option action   released
        option handler  <span class="st0">&quot;/usr/bin/wifionoff&quot;</span>
        option min      <span class="nu0">0</span>
        option max      <span class="nu0">3</span></pre>

</p>

<p>
You&#039;ll have to create the file <code>/usr/bin/wifionoff</code> and paste this:
<pre class="code bash"><span class="co0">#!/bin/sh</span>
<span class="re2">SW</span>=$<span class="br0">&#40;</span>uci <span class="re5">-q</span> get wireless.<span class="sy0">@</span>wifi-device<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.disabled<span class="br0">&#41;</span>
<span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$SW</span>&quot;</span> == <span class="st0">&quot;1&quot;</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> uci <span class="kw1">set</span> wireless.<span class="sy0">@</span>wifi-device<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.disabled=<span class="nu0">0</span>
<span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$SW</span>&quot;</span> == <span class="st0">&quot;1&quot;</span> <span class="br0">&#93;</span> <span class="sy0">||</span> uci <span class="kw1">set</span> wireless.<span class="sy0">@</span>wifi-device<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.disabled=<span class="nu0">1</span>
wifi</pre>

</p>

<p>
Another option for wifionoff is this script (doesn&#039;t store the state in uci, so it remains what is set in the configuration)
You can also call this script eg. from cron, to switch off your wifi at night.
<pre class="code bash"><span class="co0">#!/bin/sh</span>
<span class="re2">STATEFILE</span>=<span class="st0">&quot;/tmp/wifionoff.state&quot;</span>
&nbsp;
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re4">$#</span> <span class="re5">-eq</span> <span class="nu0">1</span> <span class="br0">&#93;</span>; <span class="kw1">then</span>
  <span class="kw1">case</span> <span class="re4">$1</span> <span class="kw1">in</span>
    <span class="st0">&quot;up&quot;</span><span class="sy0">|</span><span class="st0">&quot;on&quot;</span><span class="br0">&#41;</span>
      <span class="re2">STATE</span>=off
      <span class="sy0">;;</span>
    <span class="st0">&quot;down&quot;</span><span class="sy0">|</span><span class="st0">&quot;off&quot;</span><span class="br0">&#41;</span>
      <span class="re2">STATE</span>=on
      <span class="sy0">;;</span>
  <span class="kw1">esac</span>
<span class="kw1">else</span>
  <span class="kw1">if</span> <span class="br0">&#91;</span> <span class="sy0">!</span> <span class="re5">-e</span> <span class="co1">${STATEFILE}</span> <span class="br0">&#93;</span>; <span class="kw1">then</span>
    <span class="re2">STATE</span>=on
  <span class="kw1">else</span>
    . <span class="co1">${STATEFILE}</span>
  <span class="kw1">fi</span>
<span class="kw1">fi</span>
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="re5">-z</span> <span class="co1">${STATE}</span> <span class="br0">&#93;</span>; <span class="kw1">then</span>
  <span class="re2">STATE</span>=on
<span class="kw1">fi</span>
&nbsp;
<span class="kw1">if</span> <span class="br0">&#91;</span> <span class="co1">${STATE}</span> == <span class="st0">&quot;on&quot;</span> <span class="br0">&#93;</span>; <span class="kw1">then</span>
  <span class="sy0">/</span>sbin<span class="sy0">/</span>wifi down
  <span class="re2">STATE</span>=off
<span class="kw1">else</span>
  <span class="sy0">/</span>sbin<span class="sy0">/</span>wifi up
  <span class="re2">STATE</span>=on
<span class="kw1">fi</span>
&nbsp;
<span class="kw3">echo</span> <span class="st0">&quot;STATE=<span class="es3">${STATE}</span>&quot;</span> <span class="sy0">&gt;</span> <span class="co1">${STATEFILE}</span></pre>

</p>

<p>
<strong>Example 6:</strong> <em>Set transmission-daemon alt-speed, enable or disable.Short press will activate alt-speed or longer press will deactivate alt-speed and also turns on qss led about speed status on tl-wr1043nd</em>
</p>

<p>
Edit your alt-speed limits from transmission-daemon , <em>settings.json</em> file.To execute script, you need to install <em>transmission-remote</em> package from opkg.
<pre class="code bash">uci add system button    
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=pressed
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'transmission-remote -as'</span>
uci add system button    
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=pressed
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'echo 1 &gt; /sys/class/leds/tl-wr1043nd:green:qss/brightness'</span>
uci add system button
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=released
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'transmission-remote -AS'</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.min=<span class="nu0">1</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.max=<span class="nu0">4</span>
uci add system button
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.action=released
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.handler=<span class="st_h">'echo 0 &gt; /sys/class/leds/tl-wr1043nd:green:qss/brightness'</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.min=<span class="nu0">1</span>
uci <span class="kw1">set</span> system.<span class="sy0">@</span>button<span class="br0">&#91;</span>-<span class="nu0">1</span><span class="br0">&#93;</span>.max=<span class="nu0">4</span>
uci commit system</pre>

</p>

</div>

<h3 class="sectionedit8" id="leftovers_from_a_previous_version">Leftovers from a previous version</h3>
<div class="level3">

<p>
<img src="../../lib/images/smileys/fixme.gif" class="icon" alt="FIXME" />
</p>

<p>
<pre class="code bash"><span class="kw2">mkdir</span> <span class="re5">-p</span> <span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button
<span class="kw2">touch</span> <span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button<span class="sy0">/</span>00-button</pre>

</p>

<p>
<pre class="code bash"><span class="kw1">if</span> <span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$ACTION</span>&quot;</span> = <span class="st0">&quot;pressed&quot;</span> <span class="br0">&#93;</span>; <span class="kw1">then</span>
    <span class="kw1">if</span> <span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$BUTTON</span>&quot;</span> = <span class="st0">&quot;BTN_0&quot;</span> <span class="br0">&#93;</span>; <span class="kw1">then</span> BTN_0
    <span class="kw1">elif</span> <span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$BUTTON</span>&quot;</span> = <span class="st0">&quot;BTN_1&quot;</span> <span class="br0">&#93;</span>; <span class="kw1">then</span> BTN_1
    <span class="kw1">fi</span> 
<span class="kw1">fi</span> </pre>

</p>

<p>
<pre class="code bash"><span class="kw2">mkdir</span> <span class="re5">-p</span> <span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button
<span class="kw2">wget</span> <span class="re5">-O</span> <span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button<span class="sy0">/</span>00-button http:<span class="sy0">//</span>dev.openwrt.org<span class="sy0">/</span>export<span class="sy0">/</span><span class="nu0">21216</span><span class="sy0">/</span>trunk<span class="sy0">/</span>target<span class="sy0">/</span>linux<span class="sy0">/</span>atheros<span class="sy0">/</span>base-files<span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button<span class="sy0">/</span>00-button 
<span class="kw2">wget</span> <span class="re5">-O</span> http:<span class="sy0">//</span>dev.openwrt.org<span class="sy0">/</span>export<span class="sy0">/</span><span class="nu0">21216</span><span class="sy0">/</span>trunk<span class="sy0">/</span>target<span class="sy0">/</span>linux<span class="sy0">/</span>atheros<span class="sy0">/</span>base-files<span class="sy0">/</span>etc<span class="sy0">/</span>hotplug.d<span class="sy0">/</span>button<span class="sy0">/</span>00-button</pre>

</p>

<p>
<pre class="code bash"><span class="co0">#!/bin/sh</span>
<span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$BUTTON</span>&quot;</span> = <span class="st0">&quot;BTN_1&quot;</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#91;</span> <span class="st0">&quot;<span class="es2">$ACTION</span>&quot;</span> = <span class="st0">&quot;pressed&quot;</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#123;</span>
<span class="re2">SW</span>=$<span class="br0">&#40;</span>uci get wireless.<span class="sy0">@</span>wifi-device<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.disabled<span class="br0">&#41;</span>
<span class="br0">&#91;</span> <span class="re1">$SW</span> == <span class="st_h">'0'</span> <span class="br0">&#93;</span> <span class="sy0">&amp;&amp;</span> uci <span class="kw1">set</span> wireless.<span class="sy0">@</span>wifi-device<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.disabled=<span class="nu0">1</span>
<span class="br0">&#91;</span> <span class="re1">$SW</span> == <span class="st_h">'0'</span> <span class="br0">&#93;</span> <span class="sy0">||</span> uci <span class="kw1">set</span> wireless.<span class="sy0">@</span>wifi-device<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.disabled=<span class="nu0">0</span>
wifi
<span class="br0">&#125;</span></pre>

</p>

</div>

<h3 class="sectionedit9" id="wr1043nd">WR1043ND</h3>
<div class="level3">

<p>
If you decide to use the <code>wifitoggle</code> package, you will need to change a few things on the default configuration. The following will work and make the QSS led blink &quot;slowly&quot; when wifi is on:
</p>

<p>
<pre class="code bash">uci show wifitoggle
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>=wifitoggle
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.led_enable_trigger=timer
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.persistent=<span class="nu0">1</span>
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.button=BTN_1
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.led_sysfs=tl-wr1043nd:green:qss
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.led_enable_delayon=<span class="nu0">2000</span>
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.led_disable_default=<span class="nu0">1</span>
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.led_enable_delayoff=<span class="nu0">3000</span>
uci <span class="kw1">set</span> wifitoggle.<span class="sy0">@</span>wifitoggle<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>.timer=<span class="nu0">0</span></pre>

</p>

<p>
<img src="../../lib/images/smileys/icon_exclaim.gif" class="icon" alt=":!:" /> <em>You can probably get similar behaviour with <a href="../uci/system#wifiactivity" class="wikilink1" title="doc:uci:system">phy0tpt</a> trigger.</em>
</p>

</div>

<h2 class="sectionedit10" id="hid_buttons">HID buttons</h2>
<div class="level2">

</div>

<h3 class="sectionedit11" id="triggerhappy">triggerhappy</h3>
<div class="level3">

<p>
To manage the router buttons and also other <strong>HID buttons</strong> (i.e pad buttons or keys of an usb device) we can use an application like triggerhappy.
</p>

</div>

<h4 id="installation">Installation</h4>
<div class="level4">
<ol>
<li class="level1"><div class="li"> Install the <strong>triggerhappy</strong> package and the <strong>kmod-hid</strong> kernel module</div>
</li>
<li class="level1"><div class="li"> list your available buttons: execute<pre class="code bash">thd <span class="re5">--dump</span> <span class="sy0">/</span>dev<span class="sy0">/</span>input<span class="sy0">/</span>event<span class="sy0">*</span></pre>
press your buttons <br/>
<code>EV_KEY  KEY_WPS_BUTTON  1       /dev/input/event0
# KEY_WPS_BUTTON        1       command
EV_KEY  KEY_WPS_BUTTON  0       /dev/input/event0
# KEY_WPS_BUTTON        0       command
EV_KEY  KEY_VOLUMEDOWN  1       /dev/input/event1
# KEY_VOLUMEDOWN        1       command
EV_KEY  KEY_VOLUMEDOWN  0       /dev/input/event1
# KEY_VOLUMEDOWN        0       command</code></div>
</li>
<li class="level1"><div class="li"> Now associate your buttons to commands or scripts <br/>
<em>path /etc/triggerhappy/triggers.d/example.conf</em> <pre class="code bash">KEY_WPS_BUTTON <span class="nu0">1</span> <span class="sy0">/</span>etc<span class="sy0">/</span>mywifiscript.sh
KEY_VOLUMEUP <span class="nu0">1</span> amixer <span class="re5">-q</span> <span class="kw1">set</span> Speaker <span class="nu0">3</span><span class="sy0">%</span>+
KEY_VOLUMEDOWN <span class="nu0">1</span> amixer <span class="re5">-q</span> <span class="kw1">set</span> Speaker <span class="nu0">3</span><span class="sy0">%</span>-</pre>
</div>
</li>
<li class="level1"><div class="li"> run triggerhappy <br/>
<pre class="code bash"><span class="sy0">/</span>etc<span class="sy0">/</span>init.d<span class="sy0">/</span>triggerhappy start</pre>
</div>
</li>
<li class="level1"><div class="li"> enable triggerhappy permanently<br/>
<pre class="code bash"><span class="sy0">/</span>etc<span class="sy0">/</span>init.d<span class="sy0">/</span>triggerhappy <span class="kw3">enable</span></pre>
</div>
</li>
</ol>

</div>

<h3 class="sectionedit12" id="notes">Notes</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> triggerhappy repeats commands twice: see bug <a href="https://dev.openwrt.org/ticket/14995" class="urlextern" title="https://dev.openwrt.org/ticket/14995"  rel="nofollow">https://dev.openwrt.org/ticket/14995</a></div>
</li>
<li class="level1"><div class="li"> kernel modules:  <strong>kmod-hid</strong> and <strong>kmod-hid-generic</strong> both should be installed<br/>
The kmod-hid-generic kernel module must be installed for buttons on USB devices such as USB sound cards to work in OpenWrt trunk. Only then the /dev/input/event0 node for the buttons was created on the DIR-505 router with attached USB sound card. <pre class="code">[   31.720000] input: C-Media USB Headphone Set   as /devices/platform/ehci-platform/usb1/1-1/1-1:1.3/input/input0
[   31.760000] hid-generic 0003:0D8C:000C.0001: input,hidraw0: USB HID v1.00 Device [C-Media USB Headphone Set  ] on usb-ehci-platform-1/input3
[   31.800000] usbcore: registered new interface driver usbhid
[   31.800000] usbhid: USB HID core driver</pre>
This is also noted in <a href="https://dev.openwrt.org/ticket/12631" class="urlextern" title="https://dev.openwrt.org/ticket/12631"  rel="nofollow">https://dev.openwrt.org/ticket/12631</a></div>
</li>
</ul>

</div>

<h3 class="sectionedit13" id="cmdpad">cmdpad</h3>
<div class="level3">

<p>
Another simpler application to manage buttons.
</p>

</div>

                    <!-- wikipage stop -->
                                    </div>

                <div class="docInfo"><bdi>doc/howto/hardware.button.txt</bdi> · Last modified: 2015/01/21 17:25 by <bdi>karlp</bdi></div>

                            </div></div><!-- /content -->

            <hr class="a11y" />

            <!-- PAGE ACTIONS -->
            <div id="dokuwiki__pagetools">
                <h3 class="a11y">Page Tools</h3>
                <div class="tools">
                    <ul>
                        <li><a href="hardware.button?do=edit"  class="action source" accesskey="v" rel="nofollow" title="Show pagesource [V]"><span>Show pagesource</span></a></li><li><a href="hardware.button?do=revisions"  class="action revs" accesskey="o" rel="nofollow" title="Old revisions [O]"><span>Old revisions</span></a></li><li><a href="hardware.button?do=backlink"  class="action backlink" rel="nofollow" title="Backlinks"><span>Backlinks</span></a></li><li><a href="hardware.button#dokuwiki__top"  class="action top" accesskey="t" rel="nofollow" title="Back to top [T]"><span>Back to top</span></a></li>                    </ul>
                </div>
            </div>
        </div><!-- /wrapper -->

        
<!-- ********** FOOTER ********** -->
<div id="dokuwiki__footer"><div class="pad">
    <div class="license">Except where otherwise noted, content on this wiki is licensed under the following license: <bdi><a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license" class="urlextern">CC Attribution-Noncommercial-Share Alike 3.0 Unported</a></bdi></div>
    <div class="buttons">
        <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license"><img src="../../lib/images/license/button/cc-by-nc-sa.png" alt="CC Attribution-Noncommercial-Share Alike 3.0 Unported" /></a>        <a href="http://www.dokuwiki.org/donate" title="Donate" ><img
            src="../../lib/tpl/openwrt/images/button-donate.gif" width="80" height="15" alt="Donate" /></a>
        <a href="http://www.php.net" title="Powered by PHP" ><img
            src="../../lib/tpl/openwrt/images/button-php.gif" width="80" height="15" alt="Powered by PHP" /></a>
        <a href="http://validator.w3.org/check/referer" title="Valid HTML5" ><img
            src="../../lib/tpl/openwrt/images/button-html5.png" width="80" height="15" alt="Valid HTML5" /></a>
        <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3" title="Valid CSS" ><img
            src="../../lib/tpl/openwrt/images/button-css.png" width="80" height="15" alt="Valid CSS" /></a>
        <a href="http://dokuwiki.org/" title="Driven by DokuWiki" ><img
            src="../../lib/tpl/openwrt/images/button-dw.png" width="80" height="15" alt="Driven by DokuWiki" /></a>
    </div>
</div></div><!-- /footer -->

    </div></div><!-- /site -->

    <div class="no"><img src="../../lib/exe/indexer.php?id=doc%253Ahowto%253Ahardware.button&amp;1432265808" width="2" height="1" alt="" /></div>
    <div id="screen__mode" class="no"></div>    <!--[if ( lte IE 7 | IE 8 ) ]></div><![endif]-->
</body>
</html>
